{"version":3,"sources":["services/queries.tsx","components/Logo.tsx","components/Header.tsx","pages/Home.tsx","components/forms/Register.tsx","components/forms/Login.tsx","App.tsx","index.tsx"],"names":["APIURL","register","user","axios","post","login","stylesInUse","makeStyles","createStyles","logo","zIndex","width","marginRight","logoImg","height","display","Logo","classes","Link","component","RouterLink","className","to","src","alt","root","flexGrow","appBar","backgroundColor","linkBtnTransparent","padding","border","textDecoration","opacity","linkBtnBordered","borderRadius","loginGreet","fontSize","color","sectionLeft","textAlign","toggleButton","Header","logout","AppBar","position","Toolbar","username","onClick","background","justifyContent","alignItems","intro","heading","fontWeight","letterSpacing","marginBottom","introText","marginTop","containedBtn","margin","outlinedBtn","borderColor","Home","history","useHistory","handleClick","path","push","Button","variant","size","disableElevation","RegisterSchema","Yup","shape","email","required","min","max","password","matches","confirmPassword","oneOf","theme","maxWidth","textField","registerButton","title","successMessage","palette","success","main","errorMessage","error","formStatusProps","message","type","Register","useState","formStatus","setFormStatus","showFormStatus","setShowFormStatus","mutation","useMutation","createNewAccount","userData","a","mutate","useEffect","isSuccess","isError","duplicate","initialValues","onSubmit","values","actions","setTimeout","setSubmitting","validationSchema","props","handleBlur","handleChange","isSubmitting","touched","errors","Grid","container","direction","item","xs","TextField","id","name","label","value","onChange","onBlur","helperText","disabled","loginButton","Login","logInUser","localStorage","setItem","data","access_token","window","location","href","UserSchema","queryClient","QueryClient","Wrapper","token","getItem","undefined","query","useQuery","config","headers","get","me","enabled","onError","removeItem","console","log","exact","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a907fead.chunk.js","sourcesContent":["import axios from 'axios'\nimport { UseMutationResult, UseQueryResult } from 'react-query'\nimport { RegisterUserInput, UserType, AuthToken, LoginUserInput } from '../types'\n\nconst APIURL = 'http://localhost:3000/api/v1'\n\nexport function register(user: RegisterUserInput):Promise<UserType> {\n\treturn axios.post(`${APIURL}/register`, user)\n}\n\nexport function login(user: LoginUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post('http://localhost:3000/auth', user)\n}\n\nexport function me(token:string|undefined):Promise<UseQueryResult<UserType, Error>> {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${APIURL}/me`, config)\n}","import React from 'react'\nimport {\n\tcreateStyles,\n\tmakeStyles,\n\tLink,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tlogo: {\n\t\t\tzIndex: 1250,\n\t\t\twidth: '210px',\n\t\t\tmarginRight: '2em'\n\t\t},\n\t\tlogoImg: {\n\t\t\twidth: '100%',\n\t\t\theight: 'auto',\n\t\t\tdisplay: 'block'\n\t\t}\n\t})\n)\n\nconst Logo = ():React.ReactElement => {\n  \n\tconst classes = stylesInUse()\n  \n\tconst logoImg = '/img/logo.png'\n\n\treturn (\n\t\t<Link component={RouterLink} className={classes.logo} to=\"/\">      \n\t\t\t<img \n\t\t\t\tsrc={process.env.PUBLIC_URL + logoImg} \n\t\t\t\tclassName={classes.logoImg} \n\t\t\t\talt=\"SpaceBooker\"\n\t\t\t/>\n\t\t</Link>\n\t)\n}\n\nexport default Logo\n","import React from 'react'\nimport {\n\tAppBar,\n\tcreateStyles,\n\tLink,\n\tmakeStyles,\n\tToolbar,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { UserType } from '../types'\n\nimport Logo from './Logo'\n\ninterface Props {\n\tuser: UserType|undefined,\n\tlogout: () => void\n}\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: 1250,\n\t\t\tbackgroundColor: '#ffffff'\n\t\t},\n\t\tlinkBtnTransparent: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborder: '1px solid transparent',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tlinkBtnBordered: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborderRadius: '4px',\n\t\t\tborder: '1px solid rgba(98,0,238, 0.4)',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.02)',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tloginGreet: {\n\t\t\tfontSize: '.95em',\n\t\t\tmarginRight: '1em',\n\t\t\tcolor: '#000'\n\t\t},\n\t\tsectionLeft: {\n\t\t\tflexGrow: 1,\n\t\t\ttextAlign: 'left'\n\t\t},\n\t\ttoggleButton: {\n\t\t\tmarginRight: 25,\n\t\t},\n\t})\n)\n\nconst Header = ({ user, logout }: Props):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<div className={classes.sectionLeft}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\tto=\"/dashboard\"\n\t\t\t\t\t\t>\n                            Dashboard\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t>\n                                Login\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/register\"\n\t\t\t\t\t\t\t\t>\n                                Sign up\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className={classes.loginGreet}>\n                                    Hello, {user.username}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t\t\t>\n                                    Logout\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport { Button, makeStyles, createStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#6A0572',\n\t\t\tdisplay: 'flex',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\theight: 'calc(100vh - 64px)',\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading: {\n\t\t\tfontSize: '4rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.5rem',\n\t\t\tmarginTop: '0 auto 2rem',\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#df0cc4',\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#fff',\n\t\t\t},\n\t\t},\n\t})\n)\n\nconst Home = ():React.ReactElement => {\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.intro}>\n\t\t\t\t<h1 className={classes.heading}>Working spaces booking app</h1>\n\t\t\t\t<p className={classes.introText}>\n                    Create a booking calendar for your working spaces in a few seconds.\n\t\t\t\t</p>\n\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/register')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Sign up\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/login')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Login\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useMutation } from 'react-query'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { register } from '../../services/queries'\n\nimport * as Yup from 'yup'\n\nconst RegisterSchema = () => {\n\treturn Yup.object().shape({\n\t\temail: Yup.string().email().required('Email address is mandatory.'),\n\t\tusername: Yup.string()\n\t\t\t.required('Please choose your username.')\n\t\t\t.min(3, 'Username must be at least 3 characters long.')\n\t\t\t.max(50, 'Username can be maximum 50 characters long.')\n\t\t\t.required('Username is mandatory.'),\n\t\tpassword: Yup.string()\n\t\t\t.min(8, 'Password must be at least 8 characters long.')\n\t\t\t.matches(\n\t\t\t\t/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!?@#$%^&*()]).{7,30}\\S$/\n\t\t\t)\n\t\t\t.required(\n\t\t\t\t'Password must have at least one number, one uppercase character, lowercase  character and special character from !?@#$%^&*() '\n\t\t\t),\n\t\tconfirmPassword: Yup.string()\n\t\t\t.oneOf([Yup.ref('password'), ''], 'Passwords must match.')\n\t\t\t.required('Passwords must match.'),\n\t})\n}\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tregisterButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface UserData {\n  username: string\n  email: string\n  password: string\n  confirmPassword: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\tsuccess: {\n\t\tmessage: 'Registered successfully.',\n\t\ttype: 'success',\n\t},\n\terror: {\n\t\tmessage: 'Registeration failed: username already exists.',\n\t\ttype: 'error',\n\t},\n}\n\nconst Register = ():React.ReactElement => {\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n    \n\tconst mutation = useMutation(register)\n\n\tconst createNewAccount = async (userData: UserData) => {\n\t\tmutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\temail: userData.email,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n    \n\tuseEffect(() => {\n\t\tif (mutation.isSuccess) {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n    \n\t\tif (mutation.isError) {\n\t\t\tsetFormStatus(formStatusProps.duplicate)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t}, [mutation.isSuccess, mutation.isError])\n\t\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: UserData, actions) => {\n\t\t\t\t\tcreateNewAccount(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={RegisterSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<UserData>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Sign up!</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.email && errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.email && errors.email ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Make sure your password is minimum of 8 characters long and consists of at least 1 uppercase, lowercase, number and one special ' +\n                          'character from !?@#$%^&*(). Password cannot end with an empty space.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.confirmPassword}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Your confirmation did not match with your password. Please try again.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.registerButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Sign up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default Register\n","import React, { useState, useEffect } from 'react'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { login } from '../../services/queries'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface LoginFormFields {\n  username: string\n  password: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Login failed. Please try again.',\n\t\ttype: 'error',\n\t},\n}\n\nconst Login = ():React.ReactElement => {\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n \n\tconst mutation = useMutation(login)\n\n\tconst logInUser = async (userData: LoginFormFields) => {\n\t\tmutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n    \n\tuseEffect(() => {\n\t\tif (mutation.isSuccess) {\n\t\t\tlocalStorage.setItem('access_token', mutation.data?.data?.access_token ?? '')\n\t\t\twindow.location.href = '/'\n\t\t}\n    \n\t\tif (mutation.isError) {\n\t\t\tsetFormStatus(formStatusProps.duplicate)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t}, [mutation.isSuccess, mutation.isError])\n\n\tconst UserSchema = Yup.object().shape({\n\t\tusername: Yup.string().required('Please enter your username.'),\n\t\tpassword: Yup.string().required('Please enter your password.'),\n\t})\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: LoginFormFields, actions) => {\n\t\t\t\t\tlogInUser(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<LoginFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Log in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default Login\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\n\nimport { me } from './services/queries'\n\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport Register from './components/forms/Register'\nimport Login from './components/forms/Login'\n\nimport './App.css'\n\n\nconst queryClient = new QueryClient()\n\nfunction App(): React.ReactElement  {\n\treturn (\n\t\t<QueryClientProvider client={queryClient}>\n\t\t\t<Wrapper />\n\t\t</QueryClientProvider>\n\t)\n}\n\nconst Wrapper = ():React.ReactElement => {\n\t\n\tlet token = localStorage.getItem('access_token') ?? undefined\n\t\n\tconst query = useQuery(['me', token], () => me(token), { \n\t\tenabled: !!token,\n\t\tonError: () => {\n\t\t\ttoken = undefined\n\t\t\tlocalStorage.removeItem('access_token')\n\t\t}\n\t})\n\n\tconst user = query.data?.data \n\tconsole.log('meeeee', query)\n\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('access_token')\n\t\twindow.location.href = '/'\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Header logout={logout} user={user} />\n\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home />\n\t\t\t</Route>\n\n\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n"],"sourceRoot":""}