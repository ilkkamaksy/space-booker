{"version":3,"sources":["store/reducers/user.ts","store/reducers/account.ts","store/reducers/bookings.ts","store/store.ts","store/actions/user.ts","utils/config.ts","services/queries.tsx","components/Logo.tsx","components/Header.tsx","pages/Home.tsx","components/forms/Register.tsx","components/forms/Login.tsx","store/actions/accounts.ts","pages/Dashboard.tsx","components/forms/EditAccount.tsx","pages/EditAccount.tsx","pages/Services.tsx","components/forms/EditService.tsx","pages/EditService.tsx","components/forms/DatePicker.tsx","store/actions/bookings.ts","components/TimeSlotItem.tsx","components/TimeSlotList.tsx","utils/helpers.ts","components/forms/Booking.tsx","components/BookingFormDialog.tsx","components/ServiceInfoDialog.tsx","components/Calendar.tsx","components/Controller.tsx","App.tsx","index.tsx"],"names":["initialState","user","undefined","token","userReducer","state","action","type","payload","accounts","updating","accountReducer","map","acc","id","bookings","selectedDate","Date","bookingFormVisible","mergeBookings","oldBookings","newBookings","combined","concat","bookingSet","Set","Array","from","bookingReducer","rootReducer","combineReducers","userdata","accountdata","bookingData","setToken","setUser","API_URL","API_PREFIX","register","axios","post","login","saveAccount","account","localStorage","getItem","config","headers","updateAccount","put","getAccounts","get","saveService","service","updateService","saveBooking","booking","stylesInUse","makeStyles","createStyles","logo","zIndex","width","marginRight","logoImg","height","display","Logo","classes","Link","component","RouterLink","className","to","src","alt","root","flexGrow","appBar","backgroundColor","linkBtnTransparent","padding","border","textDecoration","opacity","linkBtnBordered","borderRadius","loginGreet","fontSize","color","sectionLeft","textAlign","toggleButton","connect","logoutUser","history","useHistory","AppBar","position","Toolbar","username","onClick","removeItem","push","background","justifyContent","alignItems","intro","heading","fontWeight","letterSpacing","marginBottom","introText","marginTop","containedBtn","margin","outlinedBtn","borderColor","handleClick","path","Button","variant","size","disableElevation","RegisterSchema","Yup","shape","email","required","min","max","password","matches","confirmPassword","oneOf","theme","maxWidth","textField","registerButton","title","successMessage","palette","success","main","errorMessage","error","formStatusProps","message","useState","formStatus","setFormStatus","showFormStatus","setShowFormStatus","setUserdata","redirect","setRedirect","registerMutation","useMutation","onError","onSuccess","createNewAccount","userData","a","mutate","loginMutation","logInUser","useEffect","isSuccess","isLoading","setItem","data","access_token","initialValues","onSubmit","values","actions","setTimeout","setSubmitting","validationSchema","props","handleBlur","handleChange","isSubmitting","touched","errors","Grid","container","direction","item","xs","TextField","name","label","value","onChange","onBlur","helperText","disabled","loginButton","mutation","UserSchema","startAction","setAccounts","setSingleAccount","header","paddingTop","paddingBottom","content","heading_1","heading_2","notice","listTitle","query","useQuery","enabled","length","Container","List","ListItem","ListItemText","primary","Fragment","secondary","submitButton","addAccount","accountToEdit","AccountSchema","siteUrl","description","saveMutation","updateMutation","saveAccountData","accountData","services","newAccount","updatedAccount","useParams","find","parseInt","addNewSpacePath","setAddNewSpacePath","subTitle","setSubTitle","accountId","queryAccounts","formColumn","textAreaField","lineHeight","fontFamily","dateField","serviceToEdit","SpaceSchema","maxBookings","startTime","endTime","timeSlotLen","saveServiceData","getHours","getMinutes","account_id","newService","updatedService","defaultStartTime","setHours","setMinutes","defaultEndTime","timeStrToDate","timeStr","date","timeStrParts","split","utils","DateFnsUtils","fullWidth","htmlFor","placeholder","rowsMin","TimePicker","ampm","autoOk","minutesStep","serviceId","console","log","setSelectedDate","DatePicker","formData","inputVariant","slot","cursor","slotReserved","selectedSlot","TimeSlotItem","handleSelectDate","isReserved","time","gridContent","flexDirection","TimeSlotList","slots","dateString","getTime","getTimezoneOffset","toISOString","addBooking","handleCloseBookingForm","slotNumber","service_id","saveBookingForm","BookingFormDialog","bookingFormOpen","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","toDateString","Booking","DialogActions","minWidth","ServiceInfoDialog","infoFormOpen","handleCloseInfoForm","gridContainer","gridItem","flex","row","infoIcon","top","setBookings","setbookingFormOpen","setInfoFormOpen","selectedService","setSelectedService","setSelectedSlot","now","handleToggleInfoForm","queryAccount","getAccountById","queryAccountBookings","getBookingsByAccountIdAndDateStr","timeToSeconds","timeStrArr","makeServiceTimeSlots","timeUnits","startTimeInSeconds","timeSlotCount","res","i","increment","hours","Math","floor","mins","selectedTime","reservations","filter","Info","me","exact","Home","Dashboard","EditAccount","Calendar","Services","EditService","Register","Login","createMuiTheme","store","createStore","applyMiddleware","thunk","queryClient","QueryClient","App","QueryClientProvider","client","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90be6b3a.chunk.js","sourcesContent":["import { \n\tUserActionTypes, \n\tUserState, \n} from '../types'\n\nconst initialState = {\n\tuser: undefined,\n\ttoken: undefined,\n}\n\nconst userReducer = (state = initialState, action: UserActionTypes):UserState => {\n\n\tswitch (action.type) {\n\tcase '@prefix/SET_TOKEN':\n\t\treturn {\n\t\t\t...state,\n\t\t\ttoken: action.payload,\n\t\t}\n\tcase '@prefix/SET_USER':\n\t\treturn {\n\t\t\t...state,\n\t\t\tuser: action.payload,\n\t\t}\n\tcase '@prefix/LOGOUT_USER' :\n\t\treturn {\n\t\t\t...state,\n\t\t\tuser: undefined,\n\t\t\ttoken: undefined,\n\t\t}\n\tdefault: return state\n\t}\n}\n\nexport default userReducer","import { \n\tAccountActionTypes, \n\tAccountState, \n} from '../types'\nimport { Account } from '../../types'\n\nconst initialState = {\n\taccounts: [],\n\tupdating: false\n}\n\nconst accountReducer = (state = initialState, action: AccountActionTypes):AccountState => {\n\tswitch (action.type) {\n\tcase '@prefix/START_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: true\n\t\t}\n\tcase '@prefix/DONE_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/ADD_ACCOUNT':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: [action.payload, ...state.accounts],\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_ACCOUNTS':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: action.payload,\n\t\t}\n\tcase '@prefix/SET_SINGLE_ACCOUNT':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: state.accounts.map((acc:Account) => acc.id === action.payload.id ? action.payload : acc),\n\t\t\tupdating: false\n\t\t}\n\tdefault: \n\t\treturn state\n\t}\n}\n\nexport default accountReducer","import { \n\tBookingActionTypes, \n\tBookingState, \n} from '../types'\n\nimport { Booking } from '../../types'\n\nconst initialState = {\n\tbookings: [],\n\tupdating: false,\n\tselectedDate: new Date(),\n\tbookingFormVisible: false\n}\n\nconst mergeBookings = (oldBookings:Booking[], newBookings:Booking[]):Booking[] => {\n\tconst combined = oldBookings.concat(newBookings)\n\tconst bookingSet = new Set(combined)\n\treturn Array.from(bookingSet)\n} \n\nconst bookingReducer = (state = initialState, action: BookingActionTypes):BookingState => {\n\tswitch (action.type) {\n\tcase '@prefix/START_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: true\n\t\t}\n\tcase '@prefix/ADD_BOOKING':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookings: [action.payload, ...state.bookings],\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_BOOKINGS':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookings: mergeBookings(state.bookings, action.payload),\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_SELECTED_DATE':\n\t\treturn {\n\t\t\t...state,\n\t\t\tselectedDate: action.payload,\n\t\t}\n\tcase '@prefix/SET_FORM_VISIBILITY':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookingFormVisible: !state.bookingFormVisible,\n\t\t}\n\tdefault: \n\t\treturn state\n\t}\n}\n\nexport default bookingReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport userReducer from './reducers/user'\nimport accountReducer from './reducers/account'\nimport bookingReducer from './reducers/bookings'\n\nconst rootReducer = combineReducers({\n\tuserdata: userReducer,\n\taccountdata: accountReducer,\n\tbookingData: bookingReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default function configureStore() {\n\treturn createStore(rootReducer, {}, applyMiddleware(thunk))\n}\n","import { UserType } from '../../types'\nimport { \n\tUserActionTypes,\n} from '../types'\nimport '../reducers/user'\n\nexport function setToken(token:string):UserActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_TOKEN',\n\t\tpayload: token\n\t}\n}\n\nexport const setUser = (user:UserType):UserActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_USER',\n\t\tpayload: user\n\t}\n}\n\nexport const logoutUser = ():UserActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/LOGOUT_USER',\n\t}\n}\n\n","export const API_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : 'https://space-booker.herokuapp.com'\nexport const API_PREFIX = 'api/v1'","import axios from 'axios'\nimport { UseMutationResult, UseQueryResult } from 'react-query'\nimport { \n\tRegisterUserInput, \n\tUserType, \n\tAuthToken, \n\tLoginUserInput,\n\tAccountInput,\n\tAccount,\n\tService,\n\tServiceInput,\n\tBooking\n} from '../types'\nimport { API_URL, API_PREFIX } from '../utils/config'\n\nexport function register(user: RegisterUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post(`${API_URL}/${API_PREFIX}/register`, user)\n}\n\nexport function login(user: LoginUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post(`${API_URL}/auth`, user)\n}\n\nexport function saveAccount(account:AccountInput):Promise<UseMutationResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/accounts`, account, config)\n}\n\nexport function updateAccount(account:Account):Promise<UseMutationResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.put(`${API_URL}/${API_PREFIX}/accounts/${account.id}`, account, config)\n}\n\nexport function getAccounts():Promise<UseQueryResult<Account[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/accounts`, config)\n}\n\nexport function getAccountById(id:string|undefined):Promise<UseQueryResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/accounts/${id}`, config)\n}\n\n\nexport function saveService(service:ServiceInput):Promise<UseMutationResult<Service, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/services`, service, config)\n}\n\nexport function updateService(service:Service):Promise<UseMutationResult<Service, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.put(`${API_URL}/${API_PREFIX}/services/${service.id}`, service, config)\n}\n\nexport function getServices(account:Account|undefined):Promise<UseQueryResult<Service[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\tconst accountId = account ? account.id : -1\n\t\n\treturn axios.get(`${API_URL}/${API_PREFIX}/services/account/${accountId}`, config)\n}\n\nexport function saveBooking(booking:Booking):Promise<UseMutationResult<Booking, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/bookings`, booking, config)\n}\n\nexport function getBookingsByAccountId(accountId:string|undefined):Promise<UseQueryResult<Booking[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.get(`${API_URL}/${API_PREFIX}/bookings/account/${accountId}`, config)\n}\n\nexport function getBookingsByAccountIdAndDateStr({ accountId, date}: { accountId: string|undefined, date: string}):Promise<UseQueryResult<Booking[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.get(`${API_URL}/${API_PREFIX}/bookings/account/${accountId}?date=${date}`, config)\n}\n\nexport function me(token:string|undefined):Promise<UseQueryResult<UserType, Error>> {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/me`, config)\n}","import React from 'react'\nimport {\n\tcreateStyles,\n\tmakeStyles,\n\tLink,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tlogo: {\n\t\t\tzIndex: 1250,\n\t\t\twidth: '210px',\n\t\t\tmarginRight: '2em'\n\t\t},\n\t\tlogoImg: {\n\t\t\twidth: '100%',\n\t\t\theight: 'auto',\n\t\t\tdisplay: 'block'\n\t\t}\n\t})\n)\n\nconst Logo = ():React.ReactElement => {\n  \n\tconst classes = stylesInUse()\n  \n\tconst logoImg = '/img/logo.png'\n\n\treturn (\n\t\t<Link component={RouterLink} className={classes.logo} to=\"/\">      \n\t\t\t<img \n\t\t\t\tsrc={process.env.PUBLIC_URL + logoImg} \n\t\t\t\tclassName={classes.logoImg} \n\t\t\t\talt=\"SpaceBooker\"\n\t\t\t/>\n\t\t</Link>\n\t)\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n\tAppBar,\n\tcreateStyles,\n\tLink,\n\tmakeStyles,\n\tToolbar,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { logoutUser } from '../store/actions/user'\n\nimport { AppState } from '../store/types'\n\nimport Logo from './Logo'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: 1250,\n\t\t\tbackgroundColor: '#ffffff'\n\t\t},\n\t\tlinkBtnTransparent: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborder: '1px solid transparent',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tlinkBtnBordered: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborderRadius: '4px',\n\t\t\tborder: '1px solid rgba(98,0,238, 0.4)',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.02)',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tloginGreet: {\n\t\t\tfontSize: '.95em',\n\t\t\tmarginRight: '1em',\n\t\t\tcolor: '#000'\n\t\t},\n\t\tsectionLeft: {\n\t\t\tflexGrow: 1,\n\t\t\ttextAlign: 'left'\n\t\t},\n\t\ttoggleButton: {\n\t\t\tmarginRight: 25,\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    logoutUser: () => void\n}\n\nconst Header = ({ user, logoutUser }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tconst history = useHistory()\n\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('access_token')\n\t\tlogoutUser()\n\t\thistory.push('/')\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<div className={classes.sectionLeft}>\n\t\t\t\t\t\t{user && \n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\tto=\"/dashboard\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t>\n                                Login\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/register\"\n\t\t\t\t\t\t\t\t>\n                                Sign up\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className={classes.loginGreet}>\n                                    Hello, {user.username}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t\t\t>\n                                    Logout\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tlogoutUser\n})(Header)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Button, makeStyles, createStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nimport { AppState } from '../store/types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#6A0572',\n\t\t\tdisplay: 'flex',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\theight: 'calc(100vh - 64px)',\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading: {\n\t\t\tfontSize: '4rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.5rem',\n\t\t\tmarginTop: '0 auto 2rem',\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#df0cc4',\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#fff',\n\t\t\t},\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst Home = ({ user }: Props):React.ReactElement => {\n\n\tif (user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.intro}>\n\t\t\t\t<h1 className={classes.heading}>Working spaces booking app</h1>\n\t\t\t\t<p className={classes.introText}>\n                    Create a booking calendar for your working spaces in a few seconds.\n\t\t\t\t</p>\n\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/register')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Sign up\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/login')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Login\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useMutation } from 'react-query'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { register, login } from '../../services/queries'\n\nimport { AppState } from '../../store/types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport * as Yup from 'yup'\n\nconst RegisterSchema = () => {\n\treturn Yup.object().shape({\n\t\temail: Yup.string().email().required('Email address is mandatory.'),\n\t\tusername: Yup.string()\n\t\t\t.required('Please choose your username.')\n\t\t\t.min(3, 'Username must be at least 3 characters long.')\n\t\t\t.max(50, 'Username can be maximum 50 characters long.')\n\t\t\t.required('Username is mandatory.'),\n\t\tpassword: Yup.string()\n\t\t\t.min(8, 'Password must be at least 8 characters long.')\n\t\t\t.matches(\n\t\t\t\t/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!?@#$%^&*()]).{7,30}\\S$/\n\t\t\t)\n\t\t\t.required(\n\t\t\t\t'Password must have at least one number, one uppercase character, lowercase  character and special character from !?@#$%^&*() '\n\t\t\t),\n\t\tconfirmPassword: Yup.string()\n\t\t\t.oneOf([Yup.ref('password'), ''], 'Passwords must match.')\n\t\t\t.required('Passwords must match.'),\n\t})\n}\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tregisterButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface UserData {\n  username: string\n  email: string\n  password: string\n  confirmPassword: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\tsuccess: {\n\t\tmessage: 'Registered successfully.',\n\t\ttype: 'success',\n\t},\n\terror: {\n\t\tmessage: 'Registeration failed: username or email already registered.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n}\n\nconst Register = ({ user, setToken }: Props & DispatchProps):React.ReactElement => {\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [userdata, setUserdata] = useState({ username: '', password: ''})\n\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst classes = stylesInUse()\n\t\n\tconst registerMutation = useMutation(register, {\n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}, \n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst createNewAccount = async (userData: UserData) => {\n\t\t\n\t\tregisterMutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\temail: userData.email,\n\t\t\tpassword: userData.password\n\t\t})\n\n\t\tsetUserdata({ \n\t\t\tusername: userData.username, \n\t\t\tpassword: userData.password \n\t\t})\n\t}\n\n\tconst loginMutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: { username: string, password: string }) => {\n\t\tloginMutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (registerMutation.isSuccess && userdata.username && userdata.password && !loginMutation.isLoading) {\n\t\t\tlogInUser(userdata)\n\t\t}\n\t\n\t\tif (loginMutation.isSuccess) {\n\t\t\tlocalStorage.setItem('access_token', loginMutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(loginMutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [registerMutation, user, loginMutation])\n\n\tif (redirect || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: UserData, actions) => {\n\t\t\t\t\tcreateNewAccount(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={RegisterSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<UserData>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Sign up!</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.email && errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.email && errors.email ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Make sure your password is minimum of 8 characters long and consists of at least 1 uppercase, lowercase, number and one special ' +\n                          'character from !?@#$%^&*(). Password cannot end with an empty space.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.confirmPassword}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Your confirmation did not match with your password. Please try again.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.registerButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Sign up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Register)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../../store/types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport { login } from '../../services/queries'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface LoginFormFields {\n  username: string\n  password: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Invalid username or password. Please try again.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void, \n}\n\nconst Login = ({ user, setToken }: Props & DispatchProps):React.ReactElement => {\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst mutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: LoginFormFields) => {\n\t\tmutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n    \n\tuseEffect(() => {\n\t\tif (mutation.isSuccess && !mutation.isLoading) {\n\t\t\tlocalStorage.setItem('access_token', mutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(mutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [mutation])\n\n\tif (redirect && mutation.isSuccess || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst UserSchema = Yup.object().shape({\n\t\tusername: Yup.string().required('Please enter your username.'),\n\t\tpassword: Yup.string().required('Please enter your password.'),\n\t})\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: LoginFormFields, actions) => {\n\t\t\t\t\tlogInUser(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<LoginFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Log in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Login)","import { Account } from '../../types'\nimport { \n\tAccountActionTypes,\n} from '../types'\nimport '../reducers/account'\n\nexport function startAction():AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/START_ACTION'\n\t}\n}\n\nexport function doneAction():AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/DONE_ACTION'\n\t}\n}\n\nexport function addAccount(account:Account):AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/ADD_ACCOUNT',\n\t\tpayload: account\n\t}\n}\n\nexport const setAccounts = (accounts:Account[]):AccountActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_ACCOUNTS',\n\t\tpayload: accounts\n\t}\n}\n\nexport function setSingleAccount(account:Account):AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_SINGLE_ACCOUNT',\n\t\tpayload: account\n\t}\n}\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from 'react-query'\nimport {\n\tContainer,\n\tButton,\n\tcreateStyles,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tLink\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { useHistory } from 'react-router-dom'\n\nimport { getAccounts } from '../services/queries'\n\nimport { setAccounts } from '../store/actions/accounts'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tlistTitle: {\n\t\t\tfontSize: '1.2em',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor:'#000'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n}\n\nconst Dashboard = ({ accountdata, setAccounts }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\tconst query = useQuery(['getAccounts', accountdata], getAccounts, { \n\t\tenabled: accountdata.accounts.length === 0,\n\t})\n\n\tuseEffect(() => {\n\t\tif (query.isSuccess && accountdata.accounts.length === 0 && query.data.data) {\n\t\t\tsetAccounts(query.data.data)\n\t\t}\n\t}, [query, accountdata])\n\t\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>Dashboard</h1>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tManage your organizations and bookings.\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>Your organizations</h2>\n\t\t\t\t\n\t\t\t\t\t{accountdata.accounts.length === 0 \n\t\t\t\t\t\t? <p className={classes.notice}>{'You haven\\'t added any organizations yet. Add one to get started!'} </p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t: <List>\n\t\t\t\t\t\t\t{accountdata.accounts.map(item => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ListItem key={item.id}>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.heading_2}\n\t\t\t\t\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.listTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/services`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/services`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit services\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' | '} \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit details\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' | '} \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/calendar`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Calendar\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t<Button \n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tonClick={handleClick('/add-account')}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd new organization\n\t\t\t\t\t\t\n\t\t\t\t\t</Button>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts\n})(Dashboard)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { saveAccount, updateAccount } from '../../services/queries'\n\nimport { setAccounts, addAccount, startAction, setSingleAccount } from '../../store/actions/accounts'\n\nimport { AppState } from '../../store/types'\nimport { Account } from '../../types'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\ttextField: {\n\t\t\tmargin: '5px 0 30px',\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tsubmitButton: {\n\t\t\tmarginTop: '0',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface AccountFormFields {\n  name: string\n  siteUrl: string\n  description: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Organisation details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\taddAccount: (account:Account) => void, \n\tsetSingleAccount: (account:Account) => void,\n\tstartAction: () => void\n}\n\ninterface Props {\n\taccountToEdit: Account|undefined\n}\n\nconst EditAccount = ({ accountdata, addAccount, accountToEdit, startAction, setSingleAccount }: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst history = useHistory()\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\n\tconst AccountSchema = Yup.object().shape({\n\t\tname: Yup.string().required('Please enter the name of your organisation.'),\n\t\tsiteUrl: Yup.string(),\n\t\tdescription: Yup.string(),\n\t})\n    \n\tconst saveMutation = useMutation(saveAccount, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst updateMutation = useMutation(updateAccount, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst saveAccountData = async (accountData: AccountFormFields) => {\n\t\tif (accountToEdit) {\n\t\t\tupdateMutation.mutate({\n\t\t\t\tid: accountToEdit.id,\n\t\t\t\tname: accountData.name,\n\t\t\t\tsiteUrl: accountData.siteUrl,\n\t\t\t\tdescription: accountData.description,\n\t\t\t\tservices: accountToEdit.services\n\t\t\t})\n\t\t} else {\n\t\t\tsaveMutation.mutate({\n\t\t\t\tname: accountData.name,\n\t\t\t\tsiteUrl: accountData.siteUrl,\n\t\t\t\tdescription: accountData.description\n\t\t\t})\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst newAccount = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tnewAccount && \n\t\t\taccountdata.updating\n\t\t) {\n\t\t\taddAccount(newAccount)\n\t\t}\n\n\t\tconst updatedAccount = updateMutation.data?.data\n\t\tif (\n\t\t\tupdateMutation.isSuccess &&\n\t\t\t!updateMutation.isLoading &&\n\t\t\tupdatedAccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t}\t\t\n\n\t}, [saveMutation, updateMutation, accountdata])\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}    \n\t\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: accountToEdit ? accountToEdit.name : '',\n\t\t\t\tsiteUrl: accountToEdit ? accountToEdit.siteUrl : '',\n\t\t\t\tdescription: accountToEdit ? accountToEdit.description : ''\n\t\t\t}}\n\t\t\tonSubmit={(values: AccountFormFields, actions) => {\n\t\t\t\tsaveAccountData(values)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t}, 400)\n\t\t\t}}\n\t\t\tvalidationSchema={AccountSchema}\n\t\t>\n\t\t\t{(props: FormikProps<AccountFormFields>) => {\n\t\t\t\tconst {\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t} = props\n\n\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tlabel=\"Organisation name\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.name && errors.name\n\t\t\t\t\t\t\t\t\t\t\t? errors.name\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.name && errors.name ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"siteUrl\"\n\t\t\t\t\t\t\t\t\tname=\"siteUrl\"\n\t\t\t\t\t\t\t\t\ttype=\"siteUrl\"\n\t\t\t\t\t\t\t\t\tlabel=\"Website\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={values.siteUrl}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.siteUrl && errors.siteUrl\n\t\t\t\t\t\t\t\t\t\t\t? errors.siteUrl\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.siteUrl && errors.siteUrl ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\ttype=\"description\"\n\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.submitButton} xs={6}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                                        Save\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\t\t\t\t\tonClick={handleClick('/dashboard')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                            Cancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Form>\n\t\t\t\t)\n\t\t\t}}\t\t\t\n\t\t</Formik>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n\taddAccount,\n\tstartAction,\n\tsetSingleAccount\n})(EditAccount)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tuseParams\n} from 'react-router-dom'\nimport {\n\tContainer,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../store/types'\n\nimport AccountForm from '../components/forms/EditAccount'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\ninterface RouteParams {\n\tid: string|undefined\n}\n  \nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\nconst EditAccount = ({ accountdata }: Props):React.ReactElement => {\n\n\tconst { id } = useParams<RouteParams>()\n\n\tconst accountToEdit = id ? accountdata.accounts.find(acc => acc.id === parseInt(id)) : undefined\n\tconst title = id ? 'Edit organization' : 'Add new organization'\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{title}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>General information</h2>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tEdit the name, website url and free description of your organization.\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<AccountForm accountToEdit={accountToEdit} />\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(EditAccount)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from 'react-query'\nimport {\n\tContainer,\n\tButton,\n\tcreateStyles,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tLink\n} from '@material-ui/core'\nimport { \n\tLink as RouterLink, \n\tuseParams, \n\tuseHistory,\n} from 'react-router-dom'\n\nimport { getAccounts } from '../services/queries'\n\nimport { setAccounts } from '../store/actions/accounts'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tlistTitle: {\n\t\t\tfontSize: '1.2em',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor:'#000'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ninterface RouteParams {\n\taccountId: string|undefined\n}\n\ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n}\n\nconst Services = ({ accountdata, setAccounts }: Props & DispatchProps):React.ReactElement => {\n\n\tconst [addNewSpacePath, setAddNewSpacePath] = useState('/dashboard')\n\tconst [subTitle, setSubTitle] = useState('Your services')\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\t\n\n\tconst { accountId } = useParams<RouteParams>()\n\tconst account = accountId ? accountdata.accounts.find(acc => acc.id === parseInt(accountId)) : undefined\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\tconst queryAccounts = useQuery(['getAccounts', accountdata], getAccounts, { \n\t\tenabled: accountdata.accounts.length === 0,\n\t})\n\n\n\tuseEffect(() => {\n\t\tif (account) {\n\t\t\tsetAddNewSpacePath(`/account/${account.id}/services/add`)\n\t\t\tsetSubTitle(`Services for ${account.name}`)\n\t\t}\n\n\t\tif (\n\t\t\t!account &&\n\t\t\tqueryAccounts.isSuccess && \n            accountdata.accounts.length === 0 && \n            queryAccounts.data.data\n\t\t) {\n\t\t\tsetAccounts(queryAccounts.data.data)\n\t\t}\n\n\t}, [queryAccounts, accountdata, account])\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>Manage services</h1>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tManage account services.\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>{subTitle}</h2>\n\t\t\t\t\n\t\t\t\t\t{account && account.services.length === 0 \n\t\t\t\t\t\t? <p className={classes.notice}>{'You haven\\'t added any services yet. Add one to get started!'} </p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t: <List>\n\t\t\t\t\t\t\t{account && account.services.map(item => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ListItem key={item.id}>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.heading_2}\n\t\t\t\t\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.listTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${account.id}/services/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${account.id}/services/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit service\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t<Button \n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tonClick={handleClick(addNewSpacePath)}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd new service\n\t\t\t\t\t\t\n\t\t\t\t\t</Button>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts\n})(Services)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps, Field } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport { TimePicker } from 'formik-material-ui-pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { saveService, updateService } from '../../services/queries'\n\nimport { startAction, setSingleAccount } from '../../store/actions/accounts'\n\nimport { AppState } from '../../store/types'\nimport { Service, Account } from '../../types'\n\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\tformColumn: {\n\t\t\t\n\t\t},\n\t\ttextField: {\n\t\t\tmargin: '5px 0 30px',\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\ttextAreaField: {\n\t\t\theight: '100px',\n\t\t\twidth: '99%',\n\t\t\tlineHeight: '22px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '5px 0 40px',\n\t\t\tpadding: '15px',\n\t\t\tfontFamily: 'Roboto, Helvetica, Arial, sans-serif'\n\t\t},\n\t\tdateField: {\n\t\t\tmargin: '5px 0 20px',\n\t\t},\n\t\tsubmitButton: {\n\t\t\tmarginTop: '0',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface SpaceFormFields {\n    name: string\n    description: string\n    maxBookings: number\n    startTime: Date\n    endTime: Date\n    timeSlotLen: number\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Space details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\tsetSingleAccount: (account:Account) => void,\n\tstartAction: () => void\n}\n\ninterface Props {\n\tserviceToEdit: Service|undefined,\n    account: Account|undefined\n}\n\nconst EditService = ({ \n\taccountdata, \n\tserviceToEdit, \n\tstartAction, \n\tsetSingleAccount,\n\taccount, \n}: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst history = useHistory()\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst SpaceSchema = Yup.object().shape({\n\t\tname: Yup.string().required('Please enter the name for the space.'),\n\t\tdescription: Yup.string(),\n\t\tmaxBookings: Yup.number().required('Please enter maximum number of bookings'),\n\t\tstartTime: Yup.string().required('Please enter starting time'),\n\t\tendTime: Yup.string().required('Please enter ending time.'),\n\t\ttimeSlotLen: Yup.number().required('Please enter time slot length.'),\n\t})\n    \n\tconst saveMutation = useMutation(saveService, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst updateMutation = useMutation(updateService, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst saveServiceData = async (data: SpaceFormFields) => {\n\t\tif (!account) {\n\t\t\treturn\n\t\t}\n\t\tif (serviceToEdit) {\n\t\t\tupdateMutation.mutate({\n\t\t\t\tid: serviceToEdit.id,\n\t\t\t\tname: data.name,\n\t\t\t\tdescription: data.description,\n\t\t\t\tmaxBookings: data.maxBookings,\n\t\t\t\tstartTime: `${data.startTime.getHours()}:${data.startTime.getMinutes()}`,\n\t\t\t\tendTime: `${data.endTime.getHours()}:${data.endTime.getMinutes()}`,\n\t\t\t\ttimeSlotLen: data.timeSlotLen,\n\t\t\t\taccount_id: account.id\n\t\t\t})\n\t\t} else {\n\t\t\tsaveMutation.mutate({\n\t\t\t\tname: data.name,\n\t\t\t\tdescription: data.description,\n\t\t\t\tmaxBookings: data.maxBookings,\n\t\t\t\tstartTime: `${data.startTime.getHours()}:${data.startTime.getMinutes()}`,\n\t\t\t\tendTime: `${data.endTime.getHours()}:${data.endTime.getMinutes()}`,\n\t\t\t\ttimeSlotLen: data.timeSlotLen,\n\t\t\t\taccount_id: account.id\n\t\t\t})\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst newService = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tnewService && \n\t\t\taccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tconst updatedAccount = {\n\t\t\t\t...account,\n\t\t\t\tservices: [newService, ...account.services]\n\t\t\t}\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t\tsetRedirect(true)\n\t\t}\n\n\t\tconst updatedService = updateMutation.data?.data\n\n\t\tif (\n\t\t\tupdateMutation.isSuccess &&\n\t\t\t!updateMutation.isLoading &&\n\t\t\tupdatedService &&\n\t\t\taccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tconst updatedAccount = {\n\t\t\t\t...account,\n\t\t\t\tservices: account.services.map(service => service.id === updatedService.id ? updatedService : service)\n\t\t\t}\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t\tsetRedirect(true)\n\t\t}\t\t\n\n\t}, [saveMutation, updateMutation, accountdata])\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}    \n\n\tconst defaultStartTime = new Date()\n\tdefaultStartTime.setHours(9)\n\tdefaultStartTime.setMinutes(0)\n\n\tconst defaultEndTime = new Date()\n\tdefaultEndTime.setHours(17)\n\tdefaultEndTime.setMinutes(0)\n\n\tconst timeStrToDate = (timeStr:string):Date => {\n\t\tconst date = new Date()\n\t\tconst timeStrParts = timeStr.split(':')\n\t\tdate.setHours(parseInt(timeStrParts[0]))\n\t\tdate.setMinutes(parseInt(timeStrParts[1]))\n\t\treturn date\n\t}\n\n\tif (redirect) {\n\t\treturn <Redirect to={account ? `/account/${account.id}/services/` : '/dashboard'} />\n\t}\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tname: serviceToEdit ? serviceToEdit.name : '',\n\t\t\t\t\tdescription: serviceToEdit ? serviceToEdit.description : '',\n\t\t\t\t\tmaxBookings: serviceToEdit ? serviceToEdit.maxBookings : 1,\n\t\t\t\t\tstartTime: serviceToEdit ? timeStrToDate(serviceToEdit.startTime) : defaultStartTime,\n\t\t\t\t\tendTime: serviceToEdit ? timeStrToDate(serviceToEdit.endTime) : defaultEndTime,\n\t\t\t\t\ttimeSlotLen: serviceToEdit ? serviceToEdit.timeSlotLen : 30,\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: SpaceFormFields, actions) => {\n\t\t\t\t\tsaveServiceData(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={SpaceSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<SpaceFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Space name\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.name && errors.name\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.name\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.name && errors.name ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={8}>\n\t\t\t\t\t\t\t\t\t<label htmlFor={'description'}>Description</label>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write a short description here...\"\n\t\t\t\t\t\t\t\t\t\tcomponent=\"textarea\"\n\t\t\t\t\t\t\t\t\t\trowsMin={6}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textAreaField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Field \n\t\t\t\t\t\t\t\t\t\tcomponent={TimePicker} \n\t\t\t\t\t\t\t\t\t\tid=\"startTime\"\n\t\t\t\t\t\t\t\t\t\tname=\"startTime\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Start time\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.dateField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.startTime}\n\t\t\t\t\t\t\t\t\t\tampm={false}\n\t\t\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\t\t\tminutesStep={5}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\n\t\t\t\t\t\t\t\t\t<Field \n\t\t\t\t\t\t\t\t\t\tcomponent={TimePicker} \n\t\t\t\t\t\t\t\t\t\tid=\"endTime\"\n\t\t\t\t\t\t\t\t\t\tname=\"endTime\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"End time\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.dateField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.endTime}\n\t\t\t\t\t\t\t\t\t\tampm={false}\n\t\t\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\t\t\tminutesStep={5}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"timeSlotLen\"\n\t\t\t\t\t\t\t\t\t\tname=\"timeSlotLen\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Timeslot (i.e. 30 mins)\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.timeSlotLen}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"maxBookings\"\n\t\t\t\t\t\t\t\t\t\tname=\"maxBookings\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Max bookings per timeslot\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.maxBookings}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.submitButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Save\n\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\t\t\t\t\t\tonClick={handleClick(account ? `/account/${account.id}/services/` : '/dashboard')}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                            Cancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\t\t\t\n\t\t\t</Formik>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tstartAction,\n\tsetSingleAccount\n})(EditService)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tuseParams,\n\tRedirect\n} from 'react-router-dom'\nimport {\n\tContainer,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../store/types'\n\nimport ServiceForm from '../components/forms/EditService'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\ninterface RouteParams {\n\taccountId: string|undefined\n    serviceId: string|undefined\n}\n  \nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\nconst EditService = ({ accountdata }: Props):React.ReactElement => {\n\n\tconst { accountId, serviceId } = useParams<RouteParams>()\n\n\tif (!accountId) {\n\t\t<Redirect to=\"/dashboard\" />\n\t}\n\n\tconst account = accountId ? accountdata.accounts.find(acc => acc.id === parseInt(accountId)) : undefined\n\tconst serviceToEdit = serviceId ? account?.services.find(service => service.id === parseInt(serviceId)) : undefined\n\n\tconsole.log(accountId, serviceId, account, serviceToEdit)\n\n\tconst title = serviceId ? 'Edit space' : 'Add new space'\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{title}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>Enter the space information</h2>\n\n\t\t\t\t\t<ServiceForm account={account} serviceToEdit={serviceToEdit} />\n\t\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(EditService)","import React from 'react'\n\nimport { DatePicker } from '@material-ui/pickers'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { connect } from 'react-redux'\nimport { AppState } from '../../store/types'\n\nimport { setSelectedDate } from '../../store/actions/bookings'\n\nconst mapStateToProps = (state: AppState) => ({\n\tselectedDate: state.bookingData.selectedDate,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\tsetSelectedDate: (date: Date) => void\n}\n\nconst DatePickerComponent = ({ selectedDate, setSelectedDate }: StateProps & DispatchProps):React.ReactElement => {\n\n\tconst setDate = (formData: Date | null) => {\n\t\tsetSelectedDate(formData ? formData : new Date())\n\t}\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} >\n\t\t\t<DatePicker \n\t\t\t\tvalue={selectedDate} \n\t\t\t\tonChange={setDate} \n\t\t\t\tvariant=\"inline\"\n\t\t\t\tinputVariant=\"standard\"\n\t\t\t\tlabel=\"Date\"\n\t\t\t\tautoOk={true}\n\t\t\t/>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetSelectedDate\n})(DatePickerComponent)","import { Booking } from '../../types'\nimport { \n\tBookingActionTypes,\n} from '../types'\nimport '../reducers/bookings'\n\nexport function startAction():BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/START_ACTION'\n\t}\n}\n\nexport function addBooking(booking:Booking):BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/ADD_BOOKING',\n\t\tpayload: booking\n\t}\n}\n\nexport const setBookings = (bookings:Booking[]):BookingActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_BOOKINGS',\n\t\tpayload: bookings\n\t}\n}\n\nexport function setSelectedDate(date:Date):BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_SELECTED_DATE',\n\t\tpayload: date\n\t}\n}\n\nexport function setFormVisibility():BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_FORM_VISIBILITY',\n\t}\n}\n\n\n","import React from 'react'\n\nimport {\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core'\n\nimport { \n\tBookingAttributesType \n} from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tslot: {\n\t\t\tbackground: '#fff',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '15px',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tmargin: '2px',\n\t\t\tcursor: 'pointer',\n\t\t\t'&:hover': {\n\t\t\t\tbackground: '#f7f7f7'\n\t\t\t}\n\t\t},\n\t\tslotReserved: {\n\t\t\tbackground: '#e2e2e2',\n\t\t\tcolor: '#666',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '15px',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tmargin: '2px',\n\t\t\tcursor: 'default'\n\t\t},\n\t\tselectedSlot: {\n\t\t\tbackground: '#5BC8AF',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '15px',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tmargin: '2px',\n\t\t\tcursor: 'pointer',\n\t\t},\n\t})\n)\n\ninterface Props {\n\tslot: BookingAttributesType\n\tselectedSlot: BookingAttributesType|null\n\thandleSelectDate: (slot:BookingAttributesType) => void\n}\n\nconst TimeSlotItem = ({ \n\tslot, \n\tselectedSlot,\n\thandleSelectDate \n}:Props):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tif (slot.isReserved) {\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName={classes.slotReserved}>\n\t\t\t\t<div>\n\t\t\t\t\t{slot.time}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div  \n\t\t\tclassName={selectedSlot && selectedSlot.id === slot.id && selectedSlot.service.id === slot.service.id ? classes.selectedSlot : classes.slot}\n\t\t\tonClick={() => handleSelectDate(slot)}\n\t\t>\n\t\t\t<div>\n\t\t\t\t{slot.time} \n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default TimeSlotItem","import React from 'react'\n\nimport {\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core'\n\nimport { \n\tService,\n\tBookingAttributesType \n} from '../types'\n\nimport TimeSlotItem from './TimeSlotItem'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tgridContent: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column'\n\t\t},\n\t})\n)\n\ninterface Props {\n    service: Service\n\tslots: BookingAttributesType[]\n\tselectedSlot: BookingAttributesType|null\n\thandleSelectDate: (slot:BookingAttributesType) => void\n}\n\nconst TimeSlotList = ({ \n\tservice, \n\tslots, \n\tselectedSlot,\n\thandleSelectDate \n}:Props):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.gridContent}>\n\t\t\t{slots.map(slot => {\n\t\t\t\tif (!slot) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\treturn <TimeSlotItem \n\t\t\t\t\tkey={`${service.id}-${slot.id}`} \n\t\t\t\t\tslot={slot} \n\t\t\t\t\tselectedSlot={selectedSlot} \n\t\t\t\t\thandleSelectDate={handleSelectDate} \n\t\t\t\t/>\n\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default TimeSlotList","export const dateString = (date:Date):string => {\n\treturn new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\n\t\t.toISOString()\n\t\t.split('T')[0]\n}\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { saveBooking } from '../../services/queries'\n\nimport { AppState } from '../../store/types'\nimport { Booking, BookingAttributesType } from '../../types'\n\nimport { startAction, addBooking } from '../../store/actions/bookings'\n\nimport { dateString } from '../../utils/helpers'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface BookingFormFields {\n  email: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Organisation details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tupdating: state.bookingData.updating,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\n\ninterface Props {\n\tselectedSlot: BookingAttributesType|null\n\thandleCloseBookingForm: () => void\n}\n\ninterface DispatchProps { \n\tstartAction: () => void\n\taddBooking: (booking:Booking) => void\n}\n\nconst BookingForm = ({ \n\tselectedSlot, \n\thandleCloseBookingForm,\n\tupdating,\n\tstartAction,\n\taddBooking\n}: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst classes = stylesInUse()\n\n\tconst AccountSchema = Yup.object().shape({\n\t\temail: Yup.string().required('Please enter your email.')\n\t})\n    \n\tconst saveMutation = useMutation(saveBooking, { \n\t\tonError: () => {\n\t\t\tconsole.log('error')\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tconsole.log('success')\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst saveBookingForm = (formData: BookingFormFields) => {\n\t\t\n\t\tif (!selectedSlot) {\n\t\t\treturn\n\t\t}\n\n\t\tconst date = selectedSlot.date ? selectedSlot.date : new Date()\n\n\t\tsaveMutation.mutate({\n\t\t\temail: formData.email,\n\t\t\tdate: dateString(date),\n\t\t\tslotNumber: selectedSlot.slotNumber,\n\t\t\tservice_id: selectedSlot.service.id,\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst booking = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tbooking && \n\t\t\tupdating\n\t\t) {\n\t\t\taddBooking(booking)\n\t\t\thandleCloseBookingForm()\n\t\t}\n\n\t}, [saveMutation, updating])\n    \n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\temail: '',\n\t\t\t}}\n\t\t\tonSubmit={(values: BookingFormFields, actions) => {\n\t\t\t\tsaveBookingForm(values)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t}, 400)\n\t\t\t}}\n\t\t\tvalidationSchema={AccountSchema}\n\t\t>\n\t\t\t{(props: FormikProps<BookingFormFields>) => {\n\t\t\t\tconst {\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t} = props\n\n\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tlabel=\"Your email\"\n\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.email && errors.email\n\t\t\t\t\t\t\t\t\t\t\t? errors.email\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.email && errors.email ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                                        Make booking\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Form>\n\t\t\t\t)\n\t\t\t}}\t\t\t\n\t\t</Formik>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tstartAction,\n\taddBooking\n})(BookingForm)","import React from 'react'\n\nimport {\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n\tButton\n} from '@material-ui/core'\nimport { BookingAttributesType } from '../types'\nimport BookingForm from './forms/Booking'\n\ninterface Props {\n    bookingFormOpen: boolean\n    handleCloseBookingForm: () => void\n    selectedSlot: BookingAttributesType|null\n}\n\nconst BookingFormDialog = ({ \n\tbookingFormOpen, \n\thandleCloseBookingForm,\n\tselectedSlot \n}: Props):React.ReactElement => {\n\treturn (\n\t\t<Dialog open={bookingFormOpen} onClose={handleCloseBookingForm} aria-labelledby=\"form-dialog-title\">\n\t\t\t<DialogTitle id=\"form-dialog-title\">Make a booking</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{selectedSlot && `To book ${selectedSlot.service.name} on ${selectedSlot?.date?.toDateString()} at ${selectedSlot?.time}, add your email below.`}\n\t\t\t\t</DialogContentText>\n\t\t\t\t<BookingForm selectedSlot={selectedSlot} handleCloseBookingForm={handleCloseBookingForm} />\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleCloseBookingForm} color=\"primary\">\n            Cancel\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nexport default BookingFormDialog","import React from 'react'\n\nimport {\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { Service } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tminWidth: '500px'\n\t\t},\n\t})\n)\n\ninterface Props {\n    infoFormOpen: boolean\n    handleCloseInfoForm: () => void\n    service: Service|null\n}\n\nconst ServiceInfoDialog = ({ \n\tinfoFormOpen, \n\thandleCloseInfoForm,\n\tservice\n}: Props):React.ReactElement => {\n\n\tif (!service) {\n\t\treturn <></>\n\t}\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<Dialog open={infoFormOpen} onClose={handleCloseInfoForm} aria-labelledby=\"form-dialog-title\">\n\t\t\t<DialogTitle id=\"form-dialog-title\">{service.name}</DialogTitle>\n\t\t\t<DialogContent className={classes.root}>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{service.description}\n\t\t\t\t</DialogContentText>\n\t\t\t\t\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleCloseInfoForm} color=\"primary\" variant=\"contained\">\n            Close\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nexport default ServiceInfoDialog","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { useQuery } from 'react-query'\nimport { \n\tgetAccountById,\n\tgetBookingsByAccountIdAndDateStr\n} from '../services/queries'\n\nimport { \n\tuseParams, \n} from 'react-router-dom'\n\nimport { \n\tsetAccounts, \n} from '../store/actions/accounts'\n\nimport { \n\tsetBookings, \n} from '../store/actions/bookings'\n\nimport { AppState } from '../store/types'\n\nimport { Account, Service, BookingAttributesType, Booking } from '../types'\n\nimport {\n\tContainer,\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core'\n\nimport { Info as InfoIcon } from '@material-ui/icons'\n\nimport DatePicker from './forms/DatePicker'\nimport TimeSlotList from './TimeSlotList'\nimport BookingFormDialog from './BookingFormDialog'\nimport ServiceInfoDialog from './ServiceInfoDialog'\n\nimport { dateString } from '../utils/helpers'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#eee',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\tgridContainer: {\n\t\t\tdisplay: 'flex',\n\t\t\twidth: '100%',\n\t\t\tflexDirection: 'row',\n\t\t},\n\t\tgridItem: {\n\t\t\tminWidth: '200px',\n\t\t\tmaxWidth: '50%',\n\t\t\twidth: '100%',\n\t\t\tflex: 'auto',\n\t\t\tmargin: '5px'\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '20px',\n\t\t\tpaddingBottom: '30px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tfontWeight: 'bold',\n\t\t\tmarginBottom: '1rem',\n\t\t\ttextAlign: 'center'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\trow: {\n\t\t\tpadding: '15px 0',\n\t\t\tbackground: '#ddd'\n\t\t},\n\t\tinfoIcon: {\n\t\t\tmargin: '0 4px 0',\n\t\t\tposition: 'relative',\n\t\t\ttop: '2px',\n\t\t\tcursor: 'pointer'\n\t\t}\n\t})\n)\n\n\ninterface RouteParams {\n\taccountId: string|undefined\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n\tbookingData: state.bookingData\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n\tsetBookings: (bookings: Booking[]) => void\n}\n\nconst Calendar = ({ \n\taccountdata, \n\tbookingData,\n\tsetAccounts, \n\tsetBookings\n}: Props & DispatchProps):React.ReactElement => {\n\n\tconst [bookingFormOpen, setbookingFormOpen] = useState<boolean>(false)\n\tconst [infoFormOpen, setInfoFormOpen] = useState<boolean>(false)\n\tconst [selectedService, setSelectedService] = useState<Service|null>(null)\n\tconst [selectedSlot, setSelectedSlot] = useState<BookingAttributesType|null>(null)\n\tconst now = new Date()\n\n\tconst handleSelectDate = (slot:BookingAttributesType) => {\n\t\tsetSelectedSlot(slot)\n\t\tsetbookingFormOpen(true)\n\t}\n\n\tconst handleCloseBookingForm = () => {\n\t\tsetSelectedSlot(null)\n\t\tsetbookingFormOpen(false)\n\t}\n\n\tconst handleToggleInfoForm = (service:Service|null) => {\n\t\tsetSelectedService(service)\n\t\tsetInfoFormOpen(!infoFormOpen)\n\t}\n\n\tconst { accountId } = useParams<RouteParams>()\n\tconst account = (accountdata && accountId) && accountdata.accounts.find(acc => acc.id === parseInt(accountId)) \n\n\tconst classes = stylesInUse()\n\n\tconst queryAccount = useQuery(['getAccountById', accountId], () => getAccountById(accountId), { \n\t\tenabled: !account\n\t})\n\n\tconst queryAccountBookings = useQuery(\n\t\t['getBookingsByAccountIdAndDateStr', \n\t\t\t{ accountId, date: dateString(bookingData.selectedDate) }], \n\t\t() => getBookingsByAccountIdAndDateStr({ accountId, date: dateString(bookingData.selectedDate) }), { \n\t\t\tenabled: !!accountId\n\t\t})\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!account &&\n\t\t\tqueryAccount.isSuccess && \n            queryAccount.data.data\n\t\t) {\n\t\t\tsetAccounts([queryAccount.data.data])\n\t\t}\n\n\t\tif (\n\t\t\taccount &&\n\t\t\tqueryAccountBookings.isSuccess && \n            queryAccountBookings.data.data\n\t\t) {\n\t\t\tsetBookings(queryAccountBookings.data.data)\n\t\t}\n\n\t}, [queryAccount, queryAccountBookings, account])\n\n\tconst timeToSeconds = (timeStr:string):number => {\n\t\tconst timeStrArr = timeStr.split(':')\n\t\treturn parseInt(timeStrArr[0]) * 60 * 60 + parseInt(timeStrArr[1]) * 60\n\t}\n\n\tconst timeSlotCount = (service:Service):number => {\n\t\tconst startTimeInSeconds = timeToSeconds(service.startTime)\n\t\tconst endTimeInSeconds = timeToSeconds(service.endTime)\n\t\tconst timeSlotLenInSeconds = service.timeSlotLen * 60\n\t\treturn (endTimeInSeconds - startTimeInSeconds) / timeSlotLenInSeconds\n\t}\n\n\tconst makeServiceTimeSlots = (service:Service):BookingAttributesType[] => {\n\t\tconst timeUnits = timeSlotCount(service)\n\t\tconst res = []\n\t\tfor (let i = 0; i < timeUnits; i++) {\n\n\t\t\tconst timeStrParts = service.startTime.split(':')\n\t\t\tconst increment = service.timeSlotLen * i  \n\t\t\tconst hours = `${Math.floor(parseInt(timeStrParts[0]) + increment/60)}`\n\t\t\tconst mins = `${increment % 60}`\n\t\t\tconst time = `${hours.length === 1 ? 0 : ''}${hours}:${mins}${mins.length === 1 ? 0 : ''}` \n\n\t\t\tconst selectedTime = new Date(bookingData.selectedDate)\n\t\t\tselectedTime.setHours(parseInt(hours))\n\t\t\tselectedTime.setMinutes(parseInt(mins))\n\n\t\t\tconst reservations = bookingData.bookings.length > 0 \n\t\t\t\t? bookingData.bookings.filter(booking => \n\t\t\t\t\tbooking.slotNumber === i && \n\t\t\t\t\tbooking.service_id === service.id &&\n\t\t\t\t\tdateString(bookingData.selectedDate) === booking.date) : []\n\t\t\tconst isReserved =  selectedTime < now || reservations.length >= service.maxBookings \n\n\t\t\tres.push({\n\t\t\t\tid: i,\n\t\t\t\tslotNumber: i,\n\t\t\t\tisReserved,\n\t\t\t\ttime,\n\t\t\t\tservice: service,\n\t\t\t\tdate: bookingData.selectedDate\n\t\t\t})\n\t\t}\n\t\treturn res\n\t}\n\n\tconst services = account ? account.services : []\n \n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{account ? `Booking calendar for ${account.name}` : 'Booking calendar'}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className={classes.row}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<DatePicker />\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t\n\t\t\t\t\t<div className={classes.gridContainer}>\n\t\t\t\t\t\t{services.map((service) => {\n\t\t\t\t\t\t\tconst slots = makeServiceTimeSlots(service)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={service.id} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t\t<h2 className={classes.heading_2}>\n\t\t\t\t\t\t\t\t\t\t{service.name}\n\t\t\t\t\t\t\t\t\t\t<InfoIcon \n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleToggleInfoForm(service)} \n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.infoIcon}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t<TimeSlotList \n\t\t\t\t\t\t\t\t\t\tslots={slots}\n\t\t\t\t\t\t\t\t\t\tservice={service}\n\t\t\t\t\t\t\t\t\t\tselectedSlot={selectedSlot}\n\t\t\t\t\t\t\t\t\t\thandleSelectDate={handleSelectDate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\t\t\t<BookingFormDialog \n\t\t\t\tbookingFormOpen={bookingFormOpen}\n\t\t\t\thandleCloseBookingForm={handleCloseBookingForm}\n\t\t\t\tselectedSlot={selectedSlot}\n\t\t\t/>\n\n\t\t\t<ServiceInfoDialog \n\t\t\t\tinfoFormOpen={infoFormOpen}\n\t\t\t\thandleCloseInfoForm={() => handleToggleInfoForm(null)}\n\t\t\t\tservice={selectedService}\n\t\t\t/>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n\tsetBookings\n})(Calendar)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { useQuery } from 'react-query'\n\nimport { AppState } from '../store/types'\nimport { setToken, setUser } from '../store/actions/user'\n\nimport { me } from '../services/queries'\n\nimport Header from './Header'\nimport Home from '../pages/Home'\nimport Register from './forms/Register'\nimport Login from './forms/Login'\nimport Dashboard from '../pages/Dashboard'\nimport EditAccount from '../pages/EditAccount'\nimport Services from '../pages/Services'\nimport EditService from '../pages/EditService'\nimport Calendar from './Calendar'\n\nimport { UserType } from '../types'\n    \nconst mapStateToProps = (state: AppState) => ({\n\ttoken: state.userdata.token,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n    setUser: (user:UserType) => void, \n}\n\nconst Controller = ({ token, setToken, setUser }: Props & DispatchProps):React.ReactElement => {\n    \n\tconst query = useQuery(['me', token], () => me(token), { \n\t\tenabled: !!token,\n\t\tonError: () => {\n\t\t\tsetToken('')\n\t\t\tlocalStorage.removeItem('access_token')\n\t\t},\n\t})\n    \n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('access_token') ?? '')\n\t\tif (query.isSuccess) {\n\t\t\tsetUser({ username: query.data?.data?.username, email: query.data?.data?.email })\n\t\t}\n\t}, [query])\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t<Route exact path=\"/add-account\" component={EditAccount} />\n\t\t\t<Route path='/account/:id/edit' component={EditAccount} />\n\t\t\t<Route path='/account/:accountId/calendar' component={Calendar} />\n\t\t\t<Route exact path='/account/:accountId/services' component={Services} />\n\t\t\t<Route path='/account/:accountId/services/add' component={EditService} />\n\t\t\t<Route path='/account/:accountId/services/:serviceId/edit' component={EditService} />\n\n\n\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Controller)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport {\n\tThemeProvider,\n\tcreateMuiTheme\n} from '@material-ui/core'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#6A0572',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#06BCC1',\n\t\t},\n\t},\n})\n\nimport configureStore from './store/store'\n\nimport Controller from './components/Controller'\n\nconst store = configureStore()\n\nconst queryClient = new QueryClient()\n\nfunction App(): React.ReactElement  {\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Controller />\n\t\t\t\t</ThemeProvider>\n\t\t\t</QueryClientProvider>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n"],"sourceRoot":""}