{"version":3,"sources":["store/reducers/user.ts","store/reducers/account.ts","store/reducers/bookings.ts","store/store.ts","store/actions/user.ts","utils/config.ts","services/queries.tsx","components/Logo.tsx","components/Header.tsx","pages/Home.tsx","components/forms/Register.tsx","components/forms/Login.tsx","store/actions/accounts.ts","pages/Dashboard.tsx","components/forms/EditAccount.tsx","pages/EditAccount.tsx","pages/ServiceList.tsx","store/actions/bookings.ts","pages/BookingList.tsx","pages/ManageAccount.tsx","pages/ManageBookings.tsx","components/forms/EditService.tsx","pages/EditService.tsx","components/forms/DatePicker.tsx","components/TimeSlotItem.tsx","components/TimeSlotList.tsx","utils/helpers.ts","components/forms/Booking.tsx","components/BookingFormDialog.tsx","components/ServiceInfoDialog.tsx","components/Calendar.tsx","components/Controller.tsx","App.tsx","index.tsx"],"names":["initialState","user","undefined","token","loggedOut","userReducer","state","action","type","payload","accounts","updating","accountReducer","map","acc","id","bookings","selectedDate","Date","bookingFormVisible","mergeBookings","oldBookings","newBookings","concat","reduce","r","i","some","j","JSON","stringify","bookingReducer","filter","booking","rootReducer","combineReducers","userdata","accountdata","bookingData","setToken","setUser","logoutUser","API_URL","API_PREFIX","register","axios","post","login","saveAccount","account","localStorage","getItem","config","headers","updateAccount","put","getAccounts","get","saveService","service","updateService","deleteService","delete","saveBooking","deleteBooking","stylesInUse","makeStyles","createStyles","logo","zIndex","width","marginRight","logoImg","height","display","Logo","classes","Link","component","RouterLink","className","to","src","alt","root","flexGrow","appBar","backgroundColor","linkBtnTransparent","padding","border","textDecoration","opacity","linkBtnBordered","borderRadius","loginGreet","fontSize","color","sectionLeft","textAlign","toggleButton","connect","history","useHistory","AppBar","position","Toolbar","username","onClick","removeItem","push","background","justifyContent","alignItems","intro","heading","fontWeight","letterSpacing","marginBottom","introText","marginTop","containedBtn","margin","outlinedBtn","borderColor","handleClick","path","Button","variant","size","disableElevation","RegisterSchema","Yup","shape","email","required","min","max","password","matches","confirmPassword","oneOf","theme","maxWidth","textField","registerButton","title","successMessage","palette","success","main","errorMessage","error","formStatusProps","message","useState","formStatus","setFormStatus","showFormStatus","setShowFormStatus","setUserdata","redirect","setRedirect","registerMutation","useMutation","onError","onSuccess","createNewAccount","userData","a","mutate","loginMutation","logInUser","useEffect","isSuccess","isLoading","setItem","data","access_token","initialValues","onSubmit","values","actions","setTimeout","setSubmitting","validationSchema","props","handleBlur","handleChange","isSubmitting","touched","errors","Grid","container","direction","item","xs","TextField","name","label","value","onChange","onBlur","helperText","disabled","loginButton","mutation","UserSchema","startAction","setAccounts","setSingleAccount","header","paddingTop","paddingBottom","content","heading_1","heading_2","notice","listItem","paddingLeft","listTitle","query","useQuery","enabled","length","Container","List","ListItem","ListItemText","primary","Fragment","secondary","submitButton","addAccount","accountToEdit","AccountSchema","siteUrl","description","saveMutation","updateMutation","saveAccountData","accountData","services","newAccount","updatedAccount","useParams","find","parseInt","itemMeta","ServiceList","startTime","substr","endTime","timeSlotLen","maxBookings","removeBooking","setBookings","textBtn","textTransform","itemCount","queryAccountBookings","accountId","limit","getBookingsByAccountId","toString","deleteMutation","accountBookings","account_id","slice","date","dateTime","split","handleDelete","banner","bannerLeft","bannerRight","bannerText","contentLeft","borderRight","paddingRight","contentRight","sep","adminLink","addNewSpacePath","setAddNewSpacePath","queryAccounts","ArrowLeft","BookingList","deleteBtn","dangerZone","formColumn","textAreaField","lineHeight","fontFamily","dateField","serviceToEdit","SpaceSchema","saveServiceData","getHours","getMinutes","newService","updatedService","defaultStartTime","setHours","setMinutes","defaultEndTime","timeStrToDate","timeStr","timeStrParts","utils","DateFnsUtils","fullWidth","htmlFor","placeholder","rowsMin","TimePicker","ampm","autoOk","minutesStep","forEach","ser","serviceId","setSelectedDate","DatePicker","formData","inputVariant","slot","cursor","slotReserved","selectedSlot","TimeSlotItem","handleSelectDate","isReserved","time","gridContent","flexDirection","TimeSlotList","slots","dateString","getTime","getTimezoneOffset","toISOString","addBooking","handleCloseBookingForm","slotNumber","service_id","saveBookingForm","BookingFormDialog","bookingFormOpen","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","toDateString","Booking","DialogActions","minWidth","ServiceInfoDialog","infoFormOpen","handleCloseInfoForm","gridContainer","gridItem","flex","row","infoIcon","top","setbookingFormOpen","setInfoFormOpen","selectedService","setSelectedService","setSelectedSlot","now","handleToggleInfoForm","queryAccount","getAccountById","getBookingsByAccountIdAndDateStr","timeToSeconds","timeStrArr","makeServiceTimeSlots","timeUnits","startTimeInSeconds","timeSlotCount","res","increment","hours","Math","floor","mins","selectedTime","reservations","Info","me","console","log","window","location","href","exact","Home","Dashboard","EditAccount","EditService","ManageAccount","ManageBookings","Calendar","Register","Login","createMuiTheme","store","createStore","applyMiddleware","thunk","queryClient","QueryClient","App","QueryClientProvider","client","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31d8925.chunk.js","sourcesContent":["import { \n\tUserActionTypes, \n\tUserState, \n} from '../types'\n\nconst initialState = {\n\tuser: undefined,\n\ttoken: undefined,\n\tloggedOut: false\n}\n\nconst userReducer = (state = initialState, action: UserActionTypes):UserState => {\n\n\tswitch (action.type) {\n\tcase '@prefix/SET_TOKEN':\n\t\treturn {\n\t\t\t...state,\n\t\t\ttoken: action.payload,\n\t\t}\n\tcase '@prefix/SET_USER':\n\t\treturn {\n\t\t\t...state,\n\t\t\tuser: action.payload,\n\t\t\tloggedOut: false,\n\t\t}\n\tcase '@prefix/LOGOUT_USER' :\n\t\treturn {\n\t\t\t...state,\n\t\t\tuser: undefined,\n\t\t\ttoken: undefined,\n\t\t\tloggedOut: true,\n\t\t}\n\tdefault: return state\n\t}\n}\n\nexport default userReducer","import { \n\tAccountActionTypes, \n\tAccountState, \n} from '../types'\nimport { Account } from '../../types'\n\nconst initialState = {\n\taccounts: [],\n\tupdating: false\n}\n\nconst accountReducer = (state = initialState, action: AccountActionTypes):AccountState => {\n\tswitch (action.type) {\n\tcase '@prefix/START_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: true\n\t\t}\n\tcase '@prefix/DONE_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/ADD_ACCOUNT':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: [action.payload, ...state.accounts],\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_ACCOUNTS':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: action.payload,\n\t\t}\n\tcase '@prefix/SET_SINGLE_ACCOUNT':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: state.accounts.map((acc:Account) => acc.id === action.payload.id ? action.payload : acc),\n\t\t\tupdating: false\n\t\t}\n\tdefault: \n\t\treturn state\n\t}\n}\n\nexport default accountReducer","import { \n\tBookingActionTypes, \n\tBookingState, \n} from '../types'\n\nimport { Booking } from '../../types'\n\nconst initialState = {\n\tbookings: [],\n\tupdating: false,\n\tselectedDate: new Date(),\n\tbookingFormVisible: false\n}\n\nconst mergeBookings = (oldBookings:Booking[], newBookings:Booking[]):Booking[] => {\n\tconst combined = oldBookings.concat(newBookings)\n\tconst bookingSet = combined.reduce((r, i) => \n\t\t!r.some(j => JSON.stringify(i) === JSON.stringify(j)) ? [...r, i] : r, []) \n\treturn bookingSet\n} \n\nconst bookingReducer = (state = initialState, action: BookingActionTypes):BookingState => {\n\tswitch (action.type) {\n\tcase '@prefix/START_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: true\n\t\t}\n\tcase '@prefix/ADD_BOOKING':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookings: [action.payload, ...state.bookings],\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/REMOVE_BOOKING':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookings: state.bookings.filter((booking:Booking) => booking.id !== action.payload.id),\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_BOOKINGS':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookings: mergeBookings(state.bookings, action.payload),\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_SELECTED_DATE':\n\t\treturn {\n\t\t\t...state,\n\t\t\tselectedDate: action.payload,\n\t\t}\n\tcase '@prefix/SET_FORM_VISIBILITY':\n\t\treturn {\n\t\t\t...state,\n\t\t\tbookingFormVisible: !state.bookingFormVisible,\n\t\t}\n\tdefault: \n\t\treturn state\n\t}\n}\n\nexport default bookingReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport userReducer from './reducers/user'\nimport accountReducer from './reducers/account'\nimport bookingReducer from './reducers/bookings'\n\nconst rootReducer = combineReducers({\n\tuserdata: userReducer,\n\taccountdata: accountReducer,\n\tbookingData: bookingReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default function configureStore() {\n\treturn createStore(rootReducer, {}, applyMiddleware(thunk))\n}\n","import { UserType } from '../../types'\nimport { \n\tUserActionTypes,\n} from '../types'\nimport '../reducers/user'\n\nexport function setToken(token:string):UserActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_TOKEN',\n\t\tpayload: token\n\t}\n}\n\nexport const setUser = (user:UserType):UserActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_USER',\n\t\tpayload: user\n\t}\n}\n\nexport const logoutUser = ():UserActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/LOGOUT_USER',\n\t}\n}\n\n","export const API_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : 'https://space-booker.herokuapp.com'\nexport const API_PREFIX = 'api/v1'","import axios from 'axios'\nimport { UseMutationResult, UseQueryResult } from 'react-query'\nimport { \n\tRegisterUserInput, \n\tUserType, \n\tAuthToken, \n\tLoginUserInput,\n\tAccountInput,\n\tAccount,\n\tService,\n\tServiceInput,\n\tBooking\n} from '../types'\nimport { API_URL, API_PREFIX } from '../utils/config'\n\nexport function register(user: RegisterUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post(`${API_URL}/${API_PREFIX}/register`, user)\n}\n\nexport function login(user: LoginUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post(`${API_URL}/auth`, user)\n}\n\nexport function saveAccount(account:AccountInput):Promise<UseMutationResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/accounts`, account, config)\n}\n\nexport function updateAccount(account:Account):Promise<UseMutationResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.put(`${API_URL}/${API_PREFIX}/accounts/${account.id}`, account, config)\n}\n\nexport function getAccounts():Promise<UseQueryResult<Account[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/accounts`, config)\n}\n\nexport function getAccountById(id:string|undefined):Promise<UseQueryResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/accounts/${id}`, config)\n}\n\n\nexport function saveService(service:ServiceInput):Promise<UseMutationResult<Service, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/services`, service, config)\n}\n\nexport function updateService(service:Service):Promise<UseMutationResult<Service, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.put(`${API_URL}/${API_PREFIX}/services/${service.id}`, service, config)\n}\n\nexport function deleteService(service:Service):Promise<UseMutationResult<Service, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.delete(`${API_URL}/${API_PREFIX}/services/${service.id}`, config)\n}\n\nexport function getServices(account:Account|undefined):Promise<UseQueryResult<Service[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\tconst accountId = account ? account.id : -1\n\t\n\treturn axios.get(`${API_URL}/${API_PREFIX}/services/account/${accountId}`, config)\n}\n\nexport function saveBooking(booking:Booking):Promise<UseMutationResult<Booking, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/bookings`, booking, config)\n}\n\nexport function deleteBooking(booking:Booking):Promise<UseMutationResult<Booking, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.delete(`${API_URL}/${API_PREFIX}/bookings/${booking.id}`, config)\n}\n\nexport function getBookingsByAccountId({ accountId, limit=10 }:{ accountId: string|undefined, limit?: number }):Promise<UseQueryResult<Booking[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.get(`${API_URL}/${API_PREFIX}/bookings/account/${accountId}?limit=${limit}`, config)\n}\n\nexport function getBookingsByAccountIdAndDateStr({ accountId, date }: { accountId: string|undefined, date: string}):Promise<UseQueryResult<Booking[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.get(`${API_URL}/${API_PREFIX}/bookings/account/${accountId}?date=${date}`, config)\n}\n\nexport function me(token:string|undefined):Promise<UseQueryResult<UserType, Error>> {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/me`, config)\n}","import React from 'react'\nimport {\n\tcreateStyles,\n\tmakeStyles,\n\tLink,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tlogo: {\n\t\t\tzIndex: 1250,\n\t\t\twidth: '210px',\n\t\t\tmarginRight: '2em'\n\t\t},\n\t\tlogoImg: {\n\t\t\twidth: '100%',\n\t\t\theight: 'auto',\n\t\t\tdisplay: 'block'\n\t\t}\n\t})\n)\n\nconst Logo = ():React.ReactElement => {\n  \n\tconst classes = stylesInUse()\n  \n\tconst logoImg = '/img/logo.png'\n\n\treturn (\n\t\t<Link component={RouterLink} className={classes.logo} to=\"/\">      \n\t\t\t<img \n\t\t\t\tsrc={process.env.PUBLIC_URL + logoImg} \n\t\t\t\tclassName={classes.logoImg} \n\t\t\t\talt=\"SpaceBooker\"\n\t\t\t/>\n\t\t</Link>\n\t)\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n\tAppBar,\n\tcreateStyles,\n\tLink,\n\tmakeStyles,\n\tToolbar,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { logoutUser } from '../store/actions/user'\n\nimport { AppState } from '../store/types'\n\nimport Logo from './Logo'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: 1250,\n\t\t\tbackgroundColor: '#ffffff'\n\t\t},\n\t\tlinkBtnTransparent: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborder: '1px solid transparent',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tlinkBtnBordered: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborderRadius: '4px',\n\t\t\tborder: '1px solid rgba(98,0,238, 0.4)',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.02)',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tloginGreet: {\n\t\t\tfontSize: '.95em',\n\t\t\tmarginRight: '1em',\n\t\t\tcolor: '#000'\n\t\t},\n\t\tsectionLeft: {\n\t\t\tflexGrow: 1,\n\t\t\ttextAlign: 'left'\n\t\t},\n\t\ttoggleButton: {\n\t\t\tmarginRight: 25,\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    logoutUser: () => void\n}\n\nconst Header = ({ user, logoutUser }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tconst history = useHistory()\n\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('access_token')\n\t\tlogoutUser()\n\t\thistory.push('/')\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<div className={classes.sectionLeft}>\n\t\t\t\t\t\t{user && \n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\tto=\"/dashboard\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t>\n                                Login\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/register\"\n\t\t\t\t\t\t\t\t>\n                                Sign up\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className={classes.loginGreet}>\n                                    Hello, {user.username}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t\t\t>\n                                    Logout\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tlogoutUser\n})(Header)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Button, makeStyles, createStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nimport { AppState } from '../store/types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#6A0572',\n\t\t\tdisplay: 'flex',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\theight: 'calc(100vh - 64px)',\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading: {\n\t\t\tfontSize: '4rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.5rem',\n\t\t\tmarginTop: '0 auto 2rem',\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#df0cc4',\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#fff',\n\t\t\t},\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst Home = ({ user }: Props):React.ReactElement => {\n\n\tif (user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.intro}>\n\t\t\t\t<h1 className={classes.heading}>Working spaces booking app</h1>\n\t\t\t\t<p className={classes.introText}>\n                    Create a booking calendar for your working spaces in a few seconds.\n\t\t\t\t</p>\n\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/register')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Sign up\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/login')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Login\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useMutation } from 'react-query'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { register, login } from '../../services/queries'\n\nimport { AppState } from '../../store/types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport * as Yup from 'yup'\n\nconst RegisterSchema = () => {\n\treturn Yup.object().shape({\n\t\temail: Yup.string().email().required('Email address is mandatory.'),\n\t\tusername: Yup.string()\n\t\t\t.required('Please choose your username.')\n\t\t\t.min(3, 'Username must be at least 3 characters long.')\n\t\t\t.max(50, 'Username can be maximum 50 characters long.')\n\t\t\t.required('Username is mandatory.'),\n\t\tpassword: Yup.string()\n\t\t\t.min(8, 'Password must be at least 8 characters long.')\n\t\t\t.matches(\n\t\t\t\t/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!?@#$%^&*()]).{7,30}\\S$/\n\t\t\t)\n\t\t\t.required(\n\t\t\t\t'Password must have at least one number, one uppercase character, lowercase  character and special character from !?@#$%^&*() '\n\t\t\t),\n\t\tconfirmPassword: Yup.string()\n\t\t\t.oneOf([Yup.ref('password'), ''], 'Passwords must match.')\n\t\t\t.required('Passwords must match.'),\n\t})\n}\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tregisterButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface UserData {\n  username: string\n  email: string\n  password: string\n  confirmPassword: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\tsuccess: {\n\t\tmessage: 'Registered successfully.',\n\t\ttype: 'success',\n\t},\n\terror: {\n\t\tmessage: 'Registeration failed: username or email already registered.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n}\n\nconst Register = ({ user, setToken }: Props & DispatchProps):React.ReactElement => {\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [userdata, setUserdata] = useState({ username: '', password: ''})\n\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst classes = stylesInUse()\n\t\n\tconst registerMutation = useMutation(register, {\n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}, \n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst createNewAccount = async (userData: UserData) => {\n\t\t\n\t\tregisterMutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\temail: userData.email,\n\t\t\tpassword: userData.password\n\t\t})\n\n\t\tsetUserdata({ \n\t\t\tusername: userData.username, \n\t\t\tpassword: userData.password \n\t\t})\n\t}\n\n\tconst loginMutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: { username: string, password: string }) => {\n\t\tloginMutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (registerMutation.isSuccess && userdata.username && userdata.password && !loginMutation.isLoading) {\n\t\t\tlogInUser(userdata)\n\t\t}\n\t\n\t\tif (loginMutation.isSuccess) {\n\t\t\tlocalStorage.setItem('access_token', loginMutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(loginMutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [registerMutation, user, loginMutation])\n\n\tif (redirect || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: UserData, actions) => {\n\t\t\t\t\tcreateNewAccount(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={RegisterSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<UserData>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Sign up!</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.email && errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.email && errors.email ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Make sure your password is minimum of 8 characters long and consists of at least 1 uppercase, lowercase, number and one special ' +\n                          'character from !?@#$%^&*(). Password cannot end with an empty space.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.confirmPassword}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Your confirmation did not match with your password. Please try again.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.registerButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Sign up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Register)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../../store/types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport { login } from '../../services/queries'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface LoginFormFields {\n  username: string\n  password: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Invalid username or password. Please try again.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void, \n}\n\nconst Login = ({ user, setToken }: Props & DispatchProps):React.ReactElement => {\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst mutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: LoginFormFields) => {\n\t\tmutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n    \n\tuseEffect(() => {\n\t\tif (mutation.isSuccess && !mutation.isLoading) {\n\t\t\tlocalStorage.setItem('access_token', mutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(mutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [mutation])\n\n\tif (redirect && mutation.isSuccess || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst UserSchema = Yup.object().shape({\n\t\tusername: Yup.string().required('Please enter your username.'),\n\t\tpassword: Yup.string().required('Please enter your password.'),\n\t})\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: LoginFormFields, actions) => {\n\t\t\t\t\tlogInUser(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<LoginFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Log in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Login)","import { Account } from '../../types'\nimport { \n\tAccountActionTypes,\n} from '../types'\nimport '../reducers/account'\n\nexport function startAction():AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/START_ACTION'\n\t}\n}\n\nexport function doneAction():AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/DONE_ACTION'\n\t}\n}\n\nexport function addAccount(account:Account):AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/ADD_ACCOUNT',\n\t\tpayload: account\n\t}\n}\n\nexport const setAccounts = (accounts:Account[]):AccountActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_ACCOUNTS',\n\t\tpayload: accounts\n\t}\n}\n\nexport function setSingleAccount(account:Account):AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_SINGLE_ACCOUNT',\n\t\tpayload: account\n\t}\n}\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from 'react-query'\nimport {\n\tContainer,\n\tButton,\n\tcreateStyles,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tLink\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { useHistory } from 'react-router-dom'\n\nimport { getAccounts } from '../services/queries'\n\nimport { setAccounts } from '../store/actions/accounts'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tlistItem: {\n\t\t\tpaddingLeft: 0\n\t\t},\n\t\tlistTitle: {\n\t\t\tfontSize: '1.2em',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor:'#000'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: 0,\n\t\t\twidth: 'auto',\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n}\n\nconst Dashboard = ({ accountdata, setAccounts }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\tconst query = useQuery(['getAccounts', accountdata], getAccounts, { \n\t\tenabled: accountdata.accounts.length === 0,\n\t})\n\n\tuseEffect(() => {\n\t\tif (query.isSuccess && accountdata.accounts.length === 0 && query.data.data) {\n\t\t\tsetAccounts(query.data.data)\n\t\t}\n\t}, [query, accountdata])\n\t\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>Dashboard</h1>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tManage your organizations and bookings.\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>Your organizations</h2>\n\t\t\t\t\n\t\t\t\t\t{accountdata.accounts.length === 0 \n\t\t\t\t\t\t? <p className={classes.notice}>{'You haven\\'t added any organizations yet. Add one to get started!'} </p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t: <List>\n\t\t\t\t\t\t\t{accountdata.accounts.map(item => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ListItem key={item.id} className={classes.listItem}>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.heading_2}\n\t\t\t\t\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.listTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/services`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/manage`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tManage\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' | '} \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit details\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' | '} \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/calendar`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Calendar\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t<Button \n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tonClick={handleClick('/add-account')}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd new organization\n\t\t\t\t\t\t\n\t\t\t\t\t</Button>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts\n})(Dashboard)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { saveAccount, updateAccount } from '../../services/queries'\n\nimport { setAccounts, addAccount, startAction, setSingleAccount } from '../../store/actions/accounts'\n\nimport { AppState } from '../../store/types'\nimport { Account } from '../../types'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\ttextField: {\n\t\t\tmargin: '5px 0 30px',\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tsubmitButton: {\n\t\t\tmarginTop: '0',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface AccountFormFields {\n  name: string\n  siteUrl: string\n  description: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Organisation details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\taddAccount: (account:Account) => void, \n\tsetSingleAccount: (account:Account) => void,\n\tstartAction: () => void\n}\n\ninterface Props {\n\taccountToEdit: Account|undefined\n}\n\nconst EditAccount = ({ accountdata, addAccount, accountToEdit, startAction, setSingleAccount }: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst history = useHistory()\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\n\tconst AccountSchema = Yup.object().shape({\n\t\tname: Yup.string().required('Please enter the name of your organisation.'),\n\t\tsiteUrl: Yup.string(),\n\t\tdescription: Yup.string(),\n\t})\n    \n\tconst saveMutation = useMutation(saveAccount, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst updateMutation = useMutation(updateAccount, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst saveAccountData = async (accountData: AccountFormFields) => {\n\t\tif (accountToEdit) {\n\t\t\tupdateMutation.mutate({\n\t\t\t\tid: accountToEdit.id,\n\t\t\t\tname: accountData.name,\n\t\t\t\tsiteUrl: accountData.siteUrl,\n\t\t\t\tdescription: accountData.description,\n\t\t\t\tservices: accountToEdit.services\n\t\t\t})\n\t\t} else {\n\t\t\tsaveMutation.mutate({\n\t\t\t\tname: accountData.name,\n\t\t\t\tsiteUrl: accountData.siteUrl,\n\t\t\t\tdescription: accountData.description\n\t\t\t})\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst newAccount = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tnewAccount && \n\t\t\taccountdata.updating\n\t\t) {\n\t\t\taddAccount(newAccount)\n\t\t}\n\n\t\tconst updatedAccount = updateMutation.data?.data\n\t\tif (\n\t\t\tupdateMutation.isSuccess &&\n\t\t\t!updateMutation.isLoading &&\n\t\t\tupdatedAccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t}\t\t\n\n\t}, [saveMutation, updateMutation, accountdata])\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}    \n\t\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: accountToEdit ? accountToEdit.name : '',\n\t\t\t\tsiteUrl: accountToEdit ? accountToEdit.siteUrl : '',\n\t\t\t\tdescription: accountToEdit ? accountToEdit.description : ''\n\t\t\t}}\n\t\t\tonSubmit={(values: AccountFormFields, actions) => {\n\t\t\t\tsaveAccountData(values)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t}, 400)\n\t\t\t}}\n\t\t\tvalidationSchema={AccountSchema}\n\t\t>\n\t\t\t{(props: FormikProps<AccountFormFields>) => {\n\t\t\t\tconst {\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t} = props\n\n\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tlabel=\"Organisation name\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.name && errors.name\n\t\t\t\t\t\t\t\t\t\t\t? errors.name\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.name && errors.name ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"siteUrl\"\n\t\t\t\t\t\t\t\t\tname=\"siteUrl\"\n\t\t\t\t\t\t\t\t\ttype=\"siteUrl\"\n\t\t\t\t\t\t\t\t\tlabel=\"Website\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={values.siteUrl}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.siteUrl && errors.siteUrl\n\t\t\t\t\t\t\t\t\t\t\t? errors.siteUrl\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.siteUrl && errors.siteUrl ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\ttype=\"description\"\n\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.submitButton} xs={6}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                                        Save\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\t\t\t\t\tonClick={handleClick('/dashboard')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                            Cancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Form>\n\t\t\t\t)\n\t\t\t}}\t\t\t\n\t\t</Formik>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n\taddAccount,\n\tstartAction,\n\tsetSingleAccount\n})(EditAccount)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tuseParams\n} from 'react-router-dom'\nimport {\n\tContainer,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../store/types'\n\nimport AccountForm from '../components/forms/EditAccount'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\ninterface RouteParams {\n\tid: string|undefined\n}\n  \nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\nconst EditAccount = ({ accountdata }: Props):React.ReactElement => {\n\n\tconst { id } = useParams<RouteParams>()\n\n\tconst accountToEdit = id ? accountdata.accounts.find(acc => acc.id === parseInt(id)) : undefined\n\tconst title = id ? 'Edit organization' : 'Add new organization'\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{title}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>General information</h2>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tEdit the name, website url and free description of your organization.\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<AccountForm accountToEdit={accountToEdit} />\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(EditAccount)","import React from 'react'\nimport {\n\tcreateStyles,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tLink\n} from '@material-ui/core'\nimport { \n\tLink as RouterLink, \n} from 'react-router-dom'\n\nimport { Account } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tlistItem: {\n\t\t\tpaddingLeft: 0\n\t\t},\n\t\titemMeta: {\n\t\t\tmargin: '2px 0 5px'\n\t\t},\n\t\tlistTitle: {\n\t\t\tfontSize: '1.2em',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor:'#000'\n\t\t},\n\t})\n)\n\n\ntype Props = {\n    account: Account|undefined\n}\n\nconst ServiceList = ({ account }: Props):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tif (!account || account.services.length === 0) {\n\t\treturn <p className={classes.notice}>{'You haven\\'t added any services yet. Add one to get started!'} </p>\n\t}\n\t\n\treturn (\n\t\t<List>\n\t\t\t{account && account.services.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t<ListItem key={item.id} className={classes.listItem}>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tclassName={classes.heading_2}\n\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tclassName={classes.listTitle}\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto={`/account/${account.id}/services/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.itemMeta}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Hours: {item.startTime.substr(0, 5)} - {item.endTime.substr(0, 5)} | Timeslot: {item.timeSlotLen} min | Max bookings: {item.maxBookings} per slot</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\tto={`/account/${account.id}/services/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t</Link>\t\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t) \n\t\t\t})}\n\t\t</List>\n\t)\n}\n\nexport default ServiceList","import { Booking } from '../../types'\nimport { \n\tBookingActionTypes,\n} from '../types'\nimport '../reducers/bookings'\n\nexport function startAction():BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/START_ACTION'\n\t}\n}\n\nexport function addBooking(booking:Booking):BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/ADD_BOOKING',\n\t\tpayload: booking\n\t}\n}\n\nexport function removeBooking(booking:Booking):BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/REMOVE_BOOKING',\n\t\tpayload: booking\n\t}\n}\n\nexport const setBookings = (bookings:Booking[]):BookingActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_BOOKINGS',\n\t\tpayload: bookings\n\t}\n}\n\nexport function setSelectedDate(date:Date):BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_SELECTED_DATE',\n\t\tpayload: date\n\t}\n}\n\nexport function setFormVisibility():BookingActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_FORM_VISIBILITY',\n\t}\n}\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery, useMutation } from 'react-query'\nimport {\n\tcreateStyles,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tButton\n} from '@material-ui/core'\n\nimport { \n\tgetBookingsByAccountId,\n\tdeleteBooking,\n} from '../services/queries'\n\nimport { setBookings, removeBooking } from '../store/actions/bookings'\n\nimport { AppState } from '../store/types'\nimport { Booking, Account } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tlistItem: {\n\t\t\tpaddingLeft: 0\n\t\t},\n\t\tlistTitle: {\n\t\t\tfontSize: '1.1em',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor:'#000'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\ttextBtn: {\n\t\t\tpadding: 0,\n\t\t\tfontWeight: 'normal',\n\t\t\tmargin: '0 0 0 2px',\n\t\t\twidth: 'auto',\n\t\t\ttextTransform: 'none'\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tbookingData: state.bookingData,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ntype Props = {\n    account: Account|undefined\n\titemCount: number\n}\n\ninterface DispatchProps { \n\tsetBookings: (bookings: Booking[]) => void\n\tremoveBooking: (booking: Booking) => void\n}\n\nconst Services = ({ \n\taccount, \n\tbookingData,\n\titemCount,\n\tsetBookings,\n\tremoveBooking \n}: Props & StateProps & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tif (!account) {\n\t\treturn <></>\n\t}\n\n\tconst queryAccountBookings = useQuery(['getBookingsByAccountId', account], () => getBookingsByAccountId({ accountId: account.id.toString(), limit: 40 }), { \n\t\tenabled: !!account \n\t})\n\n\tconst deleteMutation = useMutation(deleteBooking)\n\n\tconst handleDelete = (booking:Booking) => {\n\t\tdeleteMutation.mutate(booking)\n\t}\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tqueryAccountBookings.isSuccess && \n            queryAccountBookings.data.data\n\t\t) {\n\t\t\tsetBookings(queryAccountBookings.data.data)\n\t\t}\n\n\t\tif (\n\t\t\tdeleteMutation.isSuccess &&\n\t\t\tdeleteMutation.data?.data\n\t\t) {\n\t\t\tremoveBooking(deleteMutation.data.data)\n\t\t}\n\n\t}, [queryAccountBookings, deleteMutation])\n\n\tconst accountBookings = itemCount > 0 \n\t\t? bookingData.bookings.filter(item => item.service?.account_id === account.id).slice(0, itemCount)\n\t\t: bookingData.bookings.filter(item => item.service?.account_id === account.id)\n\n\tif (accountBookings.length === 0) {\n\t\treturn <p className={classes.notice}>{'There are not bookings yet.'} </p>\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<List>\n\t\t\t\t{accountBookings.map(booking => {\n\t\t\t\t\tconst dateStr = new Date(booking.dateTime).toString()\n\t\t\t\t\tconst date = dateStr.split(' GMT')[0]\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem key={booking.id} className={classes.listItem}>\n\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\tclassName={classes.heading_2}\n\t\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<div className={classes.listTitle}>\n\t\t\t\t\t\t\t\t\t\t\t{`${booking.service?.name} - ${date.substr(0, date.length-3)}`}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{`User: ${booking.email}`}\n\t\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textBtn}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDelete(booking)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetBookings,\n\tremoveBooking\n})(Services)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from 'react-query'\nimport {\n\tContainer,\n\tButton,\n\tcreateStyles,\n\tmakeStyles,\n\tGrid,\n\tLink\n} from '@material-ui/core'\n\nimport { ArrowLeft } from '@material-ui/icons'\nimport { \n\tuseParams, \n\tuseHistory,\n\tLink as RouterLink\n} from 'react-router-dom'\n\nimport { \n\tgetAccounts,\n} from '../services/queries'\n\nimport { setAccounts } from '../store/actions/accounts'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nimport ServiceList from './ServiceList'\nimport BookingList from './BookingList'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tbanner: {\n\t\t\tbackground: '#eee',\n\t\t\tpadding: '0.5em',\n\t\t},\n\t\tbannerLeft: {\n\t\t\ttextAlign: 'left'\n\t\t},\n\t\tbannerRight: {\n\t\t\ttextAlign: 'right'\n\t\t},\n\t\tbannerText: {\n\t\t\tmarginRight: '1em',\n\t\t\tcolor: '#666'\n\t\t},\n\t\tcontent: {\n\t\t\tmarginTop: '1em'\n\t\t},\n\t\tcontentLeft: {\n\t\t\tborderRight: '1px solid #ddd',\n\t\t\tpaddingRight: '2em'\n\t\t},\n\t\tcontentRight: {\n\t\t\tpaddingLeft: '4em'\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '1.6rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '0.8rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tmargin: 0,\n\t\t\twidth: 'auto',\n\t\t},\n\t\ttextBtn: {\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tmargin: 0,\n\t\t\twidth: 'auto',\n\t\t},\n\t\tsep: {\n\t\t\tpadding: '0 5px'\n\t\t},\n\t\tadminLink: {\n\t\t\ttextTransform: 'uppercase',\n\t\t\tfontSize: '14px',\n\t\t\tmarginBottom: '1em',\n\t\t\tdisplay: 'block',\n\t\t}\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ninterface RouteParams {\n\taccountId: string|undefined\n}\n\ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n}\n\nconst ManageAccount = ({ accountdata, setAccounts }: Props & DispatchProps):React.ReactElement => {\n\n\tconst [addNewSpacePath, setAddNewSpacePath] = useState('/dashboard')\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\t\n\n\tconst { accountId } = useParams<RouteParams>()\n\tconst account = accountId ? accountdata.accounts.find(acc => acc.id === parseInt(accountId)) : undefined\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\tconst queryAccounts = useQuery(['getAccounts', accountdata], getAccounts, { \n\t\tenabled: accountdata.accounts.length < 1,\n\t})\n\n\tuseEffect(() => {\n\t\tif (account) {\n\t\t\tsetAddNewSpacePath(`/account/${account.id}/services/add`)\n\t\t}\n\n\t\tif (\n\t\t\t!account &&\n\t\t\tqueryAccounts.isSuccess && \n            accountdata.accounts.length < 1 && \n            queryAccounts.data.data\n\t\t) {\n\t\t\tsetAccounts(queryAccounts.data.data)\n\t\t}\n\n\t}, [queryAccounts, accountdata, account])\n\n\treturn (\n\t\t<div className={classes.root}>\n\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>Manage {account?.name}</h1>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tManage services and bookings.\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.banner}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t<Grid item xs={6} className={classes.bannerLeft}>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.textBtn}\n\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick('/dashboard')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ArrowLeft></ArrowLeft> Dashboard\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} className={classes.bannerRight}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(`/account/${account?.id}/edit`)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tEdit organization\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<span className={classes.sep}></span>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(`/account/${account?.id}/calendar`)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tView calendar\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t\n\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t<Grid item xs={4} className={classes.contentLeft}>\n\t\t\t\t\t\t\t<h2 className={classes.heading_2}>Services</h2>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\tto={addNewSpacePath}\n\t\t\t\t\t\t\t\tclassName={classes.adminLink}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd new service\n\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t<ServiceList account={account} />\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(addNewSpacePath)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tAdd new service\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} className={classes.contentRight}>\n\t\t\t\t\t\t\t<h2 className={classes.heading_2}>Recent bookings</h2>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\tto={`/account/${account?.id}/bookings`}\n\t\t\t\t\t\t\t\tclassName={classes.adminLink}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tView all\n\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{accountId ? <BookingList account={account} itemCount={4} /> : <></> }\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(`/account/${account?.id}/bookings`)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\tView all\n\t\t\t\t\t\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n})(ManageAccount)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from 'react-query'\nimport {\n\tContainer,\n\tButton,\n\tcreateStyles,\n\tmakeStyles,\n\tGrid,\n} from '@material-ui/core'\n\nimport { ArrowLeft } from '@material-ui/icons'\nimport { \n\tuseParams, \n\tuseHistory,\n} from 'react-router-dom'\n\nimport { \n\tgetAccounts,\n} from '../services/queries'\n\nimport { setAccounts } from '../store/actions/accounts'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nimport BookingList from './BookingList'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tbanner: {\n\t\t\tbackground: '#eee',\n\t\t\tpadding: '0.5em',\n\t\t},\n\t\tbannerLeft: {\n\t\t\ttextAlign: 'left'\n\t\t},\n\t\tbannerRight: {\n\t\t\ttextAlign: 'right'\n\t\t},\n\t\tbannerText: {\n\t\t\tmarginRight: '1em',\n\t\t\tcolor: '#666'\n\t\t},\n\t\tcontent: {\n\t\t\tmarginTop: '1em'\n\t\t},\n\t\tcontentLeft: {\n\t\t\tborderRight: '1px solid #ddd',\n\t\t\tpaddingRight: '2em'\n\t\t},\n\t\tcontentRight: {\n\t\t\tpaddingLeft: '4em'\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '1.6rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '0.8rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tmargin: 0,\n\t\t\twidth: 'auto',\n\t\t},\n\t\ttextBtn: {\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tmargin: 0,\n\t\t\twidth: 'auto',\n\t\t},\n\t\tsep: {\n\t\t\tpadding: '0 5px'\n\t\t},\n\t\tadminLink: {\n\t\t\ttextTransform: 'uppercase',\n\t\t\tfontSize: '14px',\n\t\t\tmarginBottom: '1em',\n\t\t\tdisplay: 'block',\n\t\t}\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ninterface RouteParams {\n\taccountId: string|undefined\n}\n\ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n}\n\nconst ManageBookings = ({ accountdata, setAccounts }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\t\n\n\tconst { accountId } = useParams<RouteParams>()\n\tconst account = accountId ? accountdata.accounts.find(acc => acc.id === parseInt(accountId)) : undefined\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\tconst queryAccounts = useQuery(['getAccounts', accountdata], getAccounts, { \n\t\tenabled: accountdata.accounts.length < 1,\n\t})\n\n\tuseEffect(() => {\n\t\t\n\t\tif (\n\t\t\t!account &&\n\t\t\tqueryAccounts.isSuccess && \n            accountdata.accounts.length < 1 && \n            queryAccounts.data.data\n\t\t) {\n\t\t\tsetAccounts(queryAccounts.data.data)\n\t\t}\n\n\t}, [queryAccounts, accountdata, account])\n\n\treturn (\n\t\t<div className={classes.root}>\n\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{account?.name} bookings</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.banner}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t<Grid item xs={6} className={classes.bannerLeft}>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.textBtn}\n\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(`/account/${account?.id}/manage`)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ArrowLeft></ArrowLeft> Back to account\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} className={classes.bannerRight}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(`/account/${account?.id}/edit`)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tEdit organization\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<span className={classes.sep}></span>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\tonClick={handleClick(`/account/${account?.id}/calendar`)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\tView calendar\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t\n\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<h2 className={classes.heading_2}>All bookings</h2>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{accountId ? <BookingList account={account} itemCount={-1} /> : <></> }\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n})(ManageBookings)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps, Field } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport { TimePicker } from 'formik-material-ui-pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { \n\tsaveService, \n\tupdateService, \n\tdeleteService \n} from '../../services/queries'\n\nimport { startAction, setSingleAccount } from '../../store/actions/accounts'\nimport { removeBooking } from '../../store/actions/bookings'\n\nimport { AppState } from '../../store/types'\nimport { Service, Account, Booking } from '../../types'\n\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\tdeleteBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: 'red',\n\t\t\tmargin: '1em 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\tdangerZone: {\n\t\t\tmargin: '4em 0',\n\t\t},\n\t\tformColumn: {\n\t\t\t\n\t\t},\n\t\ttextField: {\n\t\t\tmargin: '5px 0 30px',\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\ttextAreaField: {\n\t\t\theight: '100px',\n\t\t\twidth: '97%',\n\t\t\tlineHeight: '22px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '5px 0 40px',\n\t\t\tpadding: '15px',\n\t\t\tfontFamily: 'Roboto, Helvetica, Arial, sans-serif'\n\t\t},\n\t\tdateField: {\n\t\t\tmargin: '5px 0 20px',\n\t\t},\n\t\tsubmitButton: {\n\t\t\tmarginTop: '0',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface SpaceFormFields {\n    name: string\n    description: string\n    maxBookings: number\n    startTime: Date\n    endTime: Date\n    timeSlotLen: number\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Space details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n\tbookingData: state.bookingData,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\tsetSingleAccount: (account:Account) => void\n\tstartAction: () => void\n\tremoveBooking: (data:Booking) => void\n}\n\ninterface Props {\n\tserviceToEdit: Service|undefined,\n    account: Account|undefined\n}\n\nconst EditService = ({ \n\taccountdata, \n\tbookingData,\n\tserviceToEdit, \n\tstartAction, \n\tsetSingleAccount,\n\tremoveBooking,\n\taccount, \n}: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst history = useHistory()\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst SpaceSchema = Yup.object().shape({\n\t\tname: Yup.string().required('Please enter the name for the space.'),\n\t\tdescription: Yup.string(),\n\t\tmaxBookings: Yup.number().required('Please enter maximum number of bookings'),\n\t\tstartTime: Yup.string().required('Please enter starting time'),\n\t\tendTime: Yup.string().required('Please enter ending time.'),\n\t\ttimeSlotLen: Yup.number().required('Please enter time slot length.'),\n\t})\n    \n\tconst saveMutation = useMutation(saveService, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst updateMutation = useMutation(updateService, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst deleteMutation = useMutation(deleteService)\n\n\tconst handleDelete = (service:Service) => {\n\t\tif (!account) {\n\t\t\treturn\n\t\t}\n\t\tdeleteMutation.mutate(service)\n\n\t\tconst serviceBookings = bookingData.bookings.filter(booking => booking.service?.id === service.id)\n\t\tserviceBookings.forEach(booking => removeBooking(booking))\n\n\t\tconst newAccount = {\n\t\t\t...account,\n\t\t\tservices: account.services.filter(ser => ser.id !== service.id)\n\t\t}\n\t\tsetSingleAccount(newAccount)\n\n\t\thistory.push(`/account/${account?.id}/manage`)\n\t}\n\n\tconst saveServiceData = async (data: SpaceFormFields) => {\n\t\tif (!account) {\n\t\t\treturn\n\t\t}\n\t\tif (serviceToEdit) {\n\t\t\tupdateMutation.mutate({\n\t\t\t\tid: serviceToEdit.id,\n\t\t\t\tname: data.name,\n\t\t\t\tdescription: data.description,\n\t\t\t\tmaxBookings: data.maxBookings,\n\t\t\t\tstartTime: `${data.startTime.getHours()}:${data.startTime.getMinutes()}`,\n\t\t\t\tendTime: `${data.endTime.getHours()}:${data.endTime.getMinutes()}`,\n\t\t\t\ttimeSlotLen: data.timeSlotLen,\n\t\t\t\taccount_id: account.id\n\t\t\t})\n\t\t} else {\n\t\t\tsaveMutation.mutate({\n\t\t\t\tname: data.name,\n\t\t\t\tdescription: data.description,\n\t\t\t\tmaxBookings: data.maxBookings,\n\t\t\t\tstartTime: `${data.startTime.getHours()}:${data.startTime.getMinutes()}`,\n\t\t\t\tendTime: `${data.endTime.getHours()}:${data.endTime.getMinutes()}`,\n\t\t\t\ttimeSlotLen: data.timeSlotLen,\n\t\t\t\taccount_id: account.id\n\t\t\t})\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst newService = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tnewService && \n\t\t\taccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tconst updatedAccount = {\n\t\t\t\t...account,\n\t\t\t\tservices: [newService, ...account.services]\n\t\t\t}\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t\tsetRedirect(true)\n\t\t}\n\n\t\tconst updatedService = updateMutation.data?.data\n\n\t\tif (\n\t\t\tupdateMutation.isSuccess &&\n\t\t\t!updateMutation.isLoading &&\n\t\t\tupdatedService &&\n\t\t\taccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tconst updatedAccount = {\n\t\t\t\t...account,\n\t\t\t\tservices: account.services.map(service => service.id === updatedService.id ? updatedService : service)\n\t\t\t}\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t\tsetRedirect(true)\n\t\t}\t\t\n\n\t}, [saveMutation, updateMutation, accountdata])\n\n\tconst handleRedirect = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}    \n\n\tconst defaultStartTime = new Date()\n\tdefaultStartTime.setHours(9)\n\tdefaultStartTime.setMinutes(0)\n\n\tconst defaultEndTime = new Date()\n\tdefaultEndTime.setHours(17)\n\tdefaultEndTime.setMinutes(0)\n\n\tconst timeStrToDate = (timeStr:string):Date => {\n\t\tconst date = new Date()\n\t\tconst timeStrParts = timeStr.split(':')\n\t\tdate.setHours(parseInt(timeStrParts[0]))\n\t\tdate.setMinutes(parseInt(timeStrParts[1]))\n\t\treturn date\n\t}\n\n\tif (redirect) {\n\t\treturn <Redirect to={account ? `/account/${account.id}/manage/` : '/dashboard'} />\n\t}\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tname: serviceToEdit ? serviceToEdit.name : '',\n\t\t\t\t\tdescription: serviceToEdit ? serviceToEdit.description : '',\n\t\t\t\t\tmaxBookings: serviceToEdit ? serviceToEdit.maxBookings : 1,\n\t\t\t\t\tstartTime: serviceToEdit ? timeStrToDate(serviceToEdit.startTime) : defaultStartTime,\n\t\t\t\t\tendTime: serviceToEdit ? timeStrToDate(serviceToEdit.endTime) : defaultEndTime,\n\t\t\t\t\ttimeSlotLen: serviceToEdit ? serviceToEdit.timeSlotLen : 30,\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: SpaceFormFields, actions) => {\n\t\t\t\t\tsaveServiceData(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={SpaceSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<SpaceFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Space name\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.name && errors.name\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.name\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.name && errors.name ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={8}>\n\t\t\t\t\t\t\t\t\t<label htmlFor={'description'}>Description</label>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Write a short description here...\"\n\t\t\t\t\t\t\t\t\t\tcomponent=\"textarea\"\n\t\t\t\t\t\t\t\t\t\trowsMin={6}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textAreaField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<Field \n\t\t\t\t\t\t\t\t\t\tcomponent={TimePicker} \n\t\t\t\t\t\t\t\t\t\tid=\"startTime\"\n\t\t\t\t\t\t\t\t\t\tname=\"startTime\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Start time\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.dateField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.startTime}\n\t\t\t\t\t\t\t\t\t\tampm={false}\n\t\t\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\t\t\tminutesStep={5}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\n\t\t\t\t\t\t\t\t\t<Field \n\t\t\t\t\t\t\t\t\t\tcomponent={TimePicker} \n\t\t\t\t\t\t\t\t\t\tid=\"endTime\"\n\t\t\t\t\t\t\t\t\t\tname=\"endTime\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"End time\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.dateField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.endTime}\n\t\t\t\t\t\t\t\t\t\tampm={false}\n\t\t\t\t\t\t\t\t\t\tautoOk={true}\n\t\t\t\t\t\t\t\t\t\tminutesStep={5}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"timeSlotLen\"\n\t\t\t\t\t\t\t\t\t\tname=\"timeSlotLen\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Timeslot (i.e. 30 mins)\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.timeSlotLen}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.formColumn} xs={2}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"maxBookings\"\n\t\t\t\t\t\t\t\t\t\tname=\"maxBookings\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Max bookings per timeslot\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\tvalue={values.maxBookings}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.submitButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Save\n\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\t\t\t\t\t\tonClick={handleRedirect(account ? `/account/${account.id}/manage/` : '/dashboard')}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                            Cancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\t\t\t\n\t\t\t</Formik>\n\n\t\t\t{serviceToEdit && \n\t\t\t<div className={classes.dangerZone}>\n\t\t\t\t<h2>Danger Zone</h2>\n\t\t\t\t<p>Be careful here, deleting the service will wipe out all data and bookings related to it.</p>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tclassName={classes.deleteBtn}\n\t\t\t\t\tonClick={() => handleDelete(serviceToEdit)}\n\t\t\t\t>\n\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tDelete service\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tstartAction,\n\tsetSingleAccount,\n\tremoveBooking\n})(EditService)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tuseParams,\n\tRedirect\n} from 'react-router-dom'\nimport {\n\tContainer,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../store/types'\n\nimport ServiceForm from '../components/forms/EditService'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\ninterface RouteParams {\n\taccountId: string|undefined\n    serviceId: string|undefined\n}\n  \nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\nconst EditService = ({ accountdata }: Props):React.ReactElement => {\n\n\tconst { accountId, serviceId } = useParams<RouteParams>()\n\n\tif (!accountId) {\n\t\t<Redirect to=\"/dashboard\" />\n\t}\n\n\tconst account = accountId ? accountdata.accounts.find(acc => acc.id === parseInt(accountId)) : undefined\n\tconst serviceToEdit = serviceId ? account?.services.find(service => service.id === parseInt(serviceId)) : undefined\n\n\tconst title = serviceId ? 'Edit space' : 'Add new space'\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{title}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>Enter the space information</h2>\n\n\t\t\t\t\t<ServiceForm account={account} serviceToEdit={serviceToEdit} />\n\t\t\t\t\t\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(EditService)","import React from 'react'\n\nimport { DatePicker } from '@material-ui/pickers'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { connect } from 'react-redux'\nimport { AppState } from '../../store/types'\n\nimport { setSelectedDate } from '../../store/actions/bookings'\n\nconst mapStateToProps = (state: AppState) => ({\n\tselectedDate: state.bookingData.selectedDate,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\tsetSelectedDate: (date: Date) => void\n}\n\nconst DatePickerComponent = ({ selectedDate, setSelectedDate }: StateProps & DispatchProps):React.ReactElement => {\n\n\tconst setDate = (formData: Date | null) => {\n\t\tsetSelectedDate(formData ? formData : new Date())\n\t}\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} >\n\t\t\t<DatePicker \n\t\t\t\tvalue={selectedDate} \n\t\t\t\tonChange={setDate} \n\t\t\t\tvariant=\"inline\"\n\t\t\t\tinputVariant=\"standard\"\n\t\t\t\tlabel=\"Date\"\n\t\t\t\tautoOk={true}\n\t\t\t/>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetSelectedDate\n})(DatePickerComponent)","import React from 'react'\n\nimport {\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core'\n\nimport { \n\tBookingAttributesType \n} from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tslot: {\n\t\t\tbackground: '#fff',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '15px',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tmargin: '2px',\n\t\t\tcursor: 'pointer',\n\t\t\t'&:hover': {\n\t\t\t\tbackground: '#f7f7f7'\n\t\t\t}\n\t\t},\n\t\tslotReserved: {\n\t\t\tbackground: '#e2e2e2',\n\t\t\tcolor: '#666',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '15px',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tmargin: '2px',\n\t\t\tcursor: 'default'\n\t\t},\n\t\tselectedSlot: {\n\t\t\tbackground: '#5BC8AF',\n\t\t\tdisplay: 'flex',\n\t\t\tpadding: '15px',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tmargin: '2px',\n\t\t\tcursor: 'pointer',\n\t\t},\n\t})\n)\n\ninterface Props {\n\tslot: BookingAttributesType\n\tselectedSlot: BookingAttributesType|null\n\thandleSelectDate: (slot:BookingAttributesType) => void\n}\n\nconst TimeSlotItem = ({ \n\tslot, \n\tselectedSlot,\n\thandleSelectDate \n}:Props):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tif (slot.isReserved) {\n\t\treturn (\n\t\t\t<div \n\t\t\t\tclassName={classes.slotReserved}>\n\t\t\t\t<div>\n\t\t\t\t\t{slot.time}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div  \n\t\t\tclassName={selectedSlot && selectedSlot.id === slot.id && selectedSlot.service.id === slot.service.id ? classes.selectedSlot : classes.slot}\n\t\t\tonClick={() => handleSelectDate(slot)}\n\t\t>\n\t\t\t<div>\n\t\t\t\t{slot.time} \n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default TimeSlotItem","import React from 'react'\n\nimport {\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core'\n\nimport { \n\tService,\n\tBookingAttributesType \n} from '../types'\n\nimport TimeSlotItem from './TimeSlotItem'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tgridContent: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'column'\n\t\t},\n\t})\n)\n\ninterface Props {\n    service: Service\n\tslots: BookingAttributesType[]\n\tselectedSlot: BookingAttributesType|null\n\thandleSelectDate: (slot:BookingAttributesType) => void\n}\n\nconst TimeSlotList = ({ \n\tservice, \n\tslots, \n\tselectedSlot,\n\thandleSelectDate \n}:Props):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.gridContent}>\n\t\t\t{slots.map(slot => {\n\t\t\t\tif (!slot) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\treturn <TimeSlotItem \n\t\t\t\t\tkey={`${service.id}-${slot.id}`} \n\t\t\t\t\tslot={slot} \n\t\t\t\t\tselectedSlot={selectedSlot} \n\t\t\t\t\thandleSelectDate={handleSelectDate} \n\t\t\t\t/>\n\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default TimeSlotList","export const dateString = (date:Date):string => {\n\treturn new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\n\t\t.toISOString()\n\t\t.split('T')[0]\n}\n\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { saveBooking } from '../../services/queries'\n\nimport { AppState } from '../../store/types'\nimport { Booking, BookingAttributesType } from '../../types'\n\nimport { startAction, addBooking } from '../../store/actions/bookings'\n\nimport { dateString } from '../../utils/helpers'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface BookingFormFields {\n  email: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Organisation details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tupdating: state.bookingData.updating,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\n\ninterface Props {\n\tselectedSlot: BookingAttributesType|null\n\thandleCloseBookingForm: () => void\n}\n\ninterface DispatchProps { \n\tstartAction: () => void\n\taddBooking: (booking:Booking) => void\n}\n\nconst BookingForm = ({ \n\tselectedSlot, \n\thandleCloseBookingForm,\n\tupdating,\n\tstartAction,\n\taddBooking\n}: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst classes = stylesInUse()\n\n\tconst AccountSchema = Yup.object().shape({\n\t\temail: Yup.string().required('Please enter your email.')\n\t})\n    \n\tconst saveMutation = useMutation(saveBooking, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst saveBookingForm = (formData: BookingFormFields) => {\n\t\t\n\t\tif (!selectedSlot) {\n\t\t\treturn\n\t\t}\n\n\t\tconst date = selectedSlot.date ? selectedSlot.date : new Date()\n\t\tconst timeStrParts = selectedSlot.time.split(':')\n\t\tdate.setHours(parseInt(timeStrParts[0]))\n\t\tdate.setMinutes(parseInt(timeStrParts[1]))\n\n\t\tconst dateTime = date.toISOString()\n\n\t\tsaveMutation.mutate({\n\t\t\temail: formData.email,\n\t\t\tdate: dateString(date),\n\t\t\tdateTime: dateTime,\n\t\t\tslotNumber: selectedSlot.slotNumber,\n\t\t\tservice_id: selectedSlot.service.id,\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst booking = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tbooking && \n\t\t\tupdating\n\t\t) {\n\t\t\taddBooking(booking)\n\t\t\thandleCloseBookingForm()\n\t\t}\n\n\t}, [saveMutation, updating])\n    \n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\temail: '',\n\t\t\t}}\n\t\t\tonSubmit={(values: BookingFormFields, actions) => {\n\t\t\t\tsaveBookingForm(values)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t}, 400)\n\t\t\t}}\n\t\t\tvalidationSchema={AccountSchema}\n\t\t>\n\t\t\t{(props: FormikProps<BookingFormFields>) => {\n\t\t\t\tconst {\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t} = props\n\n\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tlabel=\"Your email\"\n\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.email && errors.email\n\t\t\t\t\t\t\t\t\t\t\t? errors.email\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.email && errors.email ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                                        Make booking\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Form>\n\t\t\t\t)\n\t\t\t}}\t\t\t\n\t\t</Formik>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tstartAction,\n\taddBooking\n})(BookingForm)","import React from 'react'\n\nimport {\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n\tButton\n} from '@material-ui/core'\nimport { BookingAttributesType } from '../types'\nimport BookingForm from './forms/Booking'\n\ninterface Props {\n    bookingFormOpen: boolean\n    handleCloseBookingForm: () => void\n    selectedSlot: BookingAttributesType|null\n}\n\nconst BookingFormDialog = ({ \n\tbookingFormOpen, \n\thandleCloseBookingForm,\n\tselectedSlot, \n}: Props):React.ReactElement => {\n\treturn (\n\t\t<Dialog open={bookingFormOpen} onClose={handleCloseBookingForm} aria-labelledby=\"form-dialog-title\">\n\t\t\t<DialogTitle id=\"form-dialog-title\">Make a booking</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{selectedSlot && `To book ${selectedSlot.service.name} on ${selectedSlot?.date?.toDateString()} at ${selectedSlot?.time}, add your email below.`}\n\t\t\t\t</DialogContentText>\n\t\t\t\t<BookingForm selectedSlot={selectedSlot} handleCloseBookingForm={handleCloseBookingForm} />\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleCloseBookingForm} color=\"primary\">\n            Cancel\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nexport default BookingFormDialog","import React from 'react'\n\nimport {\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tDialogTitle,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { Service } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tminWidth: '500px'\n\t\t},\n\t})\n)\n\ninterface Props {\n    infoFormOpen: boolean\n    handleCloseInfoForm: () => void\n    service: Service|null\n}\n\nconst ServiceInfoDialog = ({ \n\tinfoFormOpen, \n\thandleCloseInfoForm,\n\tservice\n}: Props):React.ReactElement => {\n\n\tif (!service) {\n\t\treturn <></>\n\t}\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<Dialog open={infoFormOpen} onClose={handleCloseInfoForm} aria-labelledby=\"form-dialog-title\">\n\t\t\t<DialogTitle id=\"form-dialog-title\">{service.name}</DialogTitle>\n\t\t\t<DialogContent className={classes.root}>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{service.description}\n\t\t\t\t</DialogContentText>\n\t\t\t\t\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button onClick={handleCloseInfoForm} color=\"primary\" variant=\"contained\">\n            Close\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n\nexport default ServiceInfoDialog","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { useQuery } from 'react-query'\nimport { \n\tgetAccountById,\n\tgetBookingsByAccountIdAndDateStr\n} from '../services/queries'\n\nimport { \n\tuseParams, \n} from 'react-router-dom'\n\nimport { \n\tsetAccounts, \n} from '../store/actions/accounts'\n\nimport { \n\tsetBookings, \n} from '../store/actions/bookings'\n\nimport { AppState } from '../store/types'\n\nimport { Account, Service, BookingAttributesType, Booking } from '../types'\n\nimport {\n\tContainer,\n\tcreateStyles,\n\tmakeStyles,\n} from '@material-ui/core'\n\nimport { Info as InfoIcon } from '@material-ui/icons'\n\nimport DatePicker from './forms/DatePicker'\nimport TimeSlotList from './TimeSlotList'\nimport BookingFormDialog from './BookingFormDialog'\nimport ServiceInfoDialog from './ServiceInfoDialog'\n\nimport { dateString } from '../utils/helpers'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#eee',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\tgridContainer: {\n\t\t\tdisplay: 'flex',\n\t\t\twidth: '100%',\n\t\t\tflexDirection: 'row',\n\t\t},\n\t\tgridItem: {\n\t\t\tminWidth: '200px',\n\t\t\tmaxWidth: '50%',\n\t\t\twidth: '100%',\n\t\t\tflex: 'auto',\n\t\t\tmargin: '5px'\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '20px',\n\t\t\tpaddingBottom: '30px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tfontWeight: 'bold',\n\t\t\tmarginBottom: '1rem',\n\t\t\ttextAlign: 'center'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\trow: {\n\t\t\tpadding: '15px 0',\n\t\t\tbackground: '#ddd'\n\t\t},\n\t\tinfoIcon: {\n\t\t\tmargin: '0 4px 0',\n\t\t\tposition: 'relative',\n\t\t\ttop: '2px',\n\t\t\tcursor: 'pointer'\n\t\t}\n\t})\n)\n\n\ninterface RouteParams {\n\taccountId: string|undefined\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n\tbookingData: state.bookingData\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n\tsetBookings: (bookings: Booking[]) => void\n}\n\nconst Calendar = ({ \n\taccountdata, \n\tbookingData,\n\tsetAccounts, \n\tsetBookings\n}: Props & DispatchProps):React.ReactElement => {\n\n\tconst [bookingFormOpen, setbookingFormOpen] = useState<boolean>(false)\n\tconst [infoFormOpen, setInfoFormOpen] = useState<boolean>(false)\n\tconst [selectedService, setSelectedService] = useState<Service|null>(null)\n\tconst [selectedSlot, setSelectedSlot] = useState<BookingAttributesType|null>(null)\n\tconst now = new Date()\n\n\tconst handleSelectDate = (slot:BookingAttributesType) => {\n\t\tsetSelectedSlot(slot)\n\t\tsetbookingFormOpen(true)\n\t}\n\n\tconst handleCloseBookingForm = () => {\n\t\tsetSelectedSlot(null)\n\t\tsetbookingFormOpen(false)\n\t}\n\n\tconst handleToggleInfoForm = (service:Service|null) => {\n\t\tsetSelectedService(service)\n\t\tsetInfoFormOpen(!infoFormOpen)\n\t}\n\n\tconst { accountId } = useParams<RouteParams>()\n\tconst account = (accountdata && accountId) && accountdata.accounts.find(acc => acc.id === parseInt(accountId)) \n\n\tconst classes = stylesInUse()\n\n\tconst queryAccount = useQuery(['getAccountById', accountId], () => getAccountById(accountId), { \n\t\tenabled: !account\n\t})\n\n\tconst queryAccountBookings = useQuery(\n\t\t['getBookingsByAccountIdAndDateStr', \n\t\t\t{ accountId, date: dateString(bookingData.selectedDate) }], \n\t\t() => getBookingsByAccountIdAndDateStr({ accountId, date: dateString(bookingData.selectedDate) }), { \n\t\t\tenabled: !!accountId\n\t\t})\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!account &&\n\t\t\tqueryAccount.isSuccess && \n            queryAccount.data.data\n\t\t) {\n\t\t\tsetAccounts([queryAccount.data.data])\n\t\t}\n\n\t\tif (\n\t\t\taccount &&\n\t\t\tqueryAccountBookings.isSuccess && \n            queryAccountBookings.data.data\n\t\t) {\n\t\t\tsetBookings(queryAccountBookings.data.data)\n\t\t}\n\n\t}, [queryAccount, queryAccountBookings, account])\n\n\tconst timeToSeconds = (timeStr:string):number => {\n\t\tconst timeStrArr = timeStr.split(':')\n\t\treturn parseInt(timeStrArr[0]) * 60 * 60 + parseInt(timeStrArr[1]) * 60\n\t}\n\n\tconst timeSlotCount = (service:Service):number => {\n\t\tconst startTimeInSeconds = timeToSeconds(service.startTime)\n\t\tconst endTimeInSeconds = timeToSeconds(service.endTime)\n\t\tconst timeSlotLenInSeconds = service.timeSlotLen * 60\n\t\treturn (endTimeInSeconds - startTimeInSeconds) / timeSlotLenInSeconds\n\t}\n\n\tconst makeServiceTimeSlots = (service:Service):BookingAttributesType[] => {\n\t\tconst timeUnits = timeSlotCount(service)\n\t\tconst res = []\n\t\tfor (let i = 0; i < timeUnits; i++) {\n\n\t\t\tconst timeStrParts = service.startTime.split(':')\n\t\t\tconst increment = service.timeSlotLen * i  \n\t\t\tconst hours = `${Math.floor(parseInt(timeStrParts[0]) + increment/60)}`\n\t\t\tconst mins = `${increment % 60}`\n\t\t\tconst time = `${hours.length === 1 ? 0 : ''}${hours}:${mins}${mins.length === 1 ? 0 : ''}` \n\n\t\t\tconst selectedTime = new Date(bookingData.selectedDate)\n\t\t\tselectedTime.setHours(parseInt(hours))\n\t\t\tselectedTime.setMinutes(parseInt(mins))\n\n\t\t\tconst reservations = bookingData.bookings.length > 0 \n\t\t\t\t? bookingData.bookings.filter(booking => \n\t\t\t\t\tbooking.slotNumber === i && \n\t\t\t\t\tbooking.service?.id === service.id &&\n\t\t\t\t\tdateString(bookingData.selectedDate) === booking.date) : []\n\t\t\tconst isReserved =  selectedTime < now || reservations.length >= service.maxBookings \n\n\t\t\tres.push({\n\t\t\t\tid: i,\n\t\t\t\tslotNumber: i,\n\t\t\t\tisReserved,\n\t\t\t\ttime,\n\t\t\t\tservice: service,\n\t\t\t\tdate: bookingData.selectedDate\n\t\t\t})\n\t\t}\n\t\treturn res\n\t}\n\n\tconst services = account ? account.services : []\n \n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{account ? `Booking calendar for ${account.name}` : 'Booking calendar'}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className={classes.row}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<DatePicker />\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t\n\t\t\t\t\t<div className={classes.gridContainer}>\n\t\t\t\t\t\t{services.map((service) => {\n\t\t\t\t\t\t\tconst slots = makeServiceTimeSlots(service)\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={service.id} className={classes.gridItem}>\n\t\t\t\t\t\t\t\t\t<h2 className={classes.heading_2}>\n\t\t\t\t\t\t\t\t\t\t{service.name}\n\t\t\t\t\t\t\t\t\t\t<InfoIcon \n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleToggleInfoForm(service)} \n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\t\t\t\t\tfontSize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.infoIcon}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t\t<TimeSlotList \n\t\t\t\t\t\t\t\t\t\tslots={slots}\n\t\t\t\t\t\t\t\t\t\tservice={service}\n\t\t\t\t\t\t\t\t\t\tselectedSlot={selectedSlot}\n\t\t\t\t\t\t\t\t\t\thandleSelectDate={handleSelectDate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\t\t\t<BookingFormDialog \n\t\t\t\tbookingFormOpen={bookingFormOpen}\n\t\t\t\thandleCloseBookingForm={handleCloseBookingForm}\n\t\t\t\tselectedSlot={selectedSlot}\n\t\t\t/>\n\n\t\t\t<ServiceInfoDialog \n\t\t\t\tinfoFormOpen={infoFormOpen}\n\t\t\t\thandleCloseInfoForm={() => handleToggleInfoForm(null)}\n\t\t\t\tservice={selectedService}\n\t\t\t/>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n\tsetBookings\n})(Calendar)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useQuery } from 'react-query'\n\nimport { AppState } from '../store/types'\nimport { setToken, setUser, logoutUser } from '../store/actions/user'\n\nimport { me } from '../services/queries'\n\nimport Header from './Header'\nimport Home from '../pages/Home'\nimport Register from './forms/Register'\nimport Login from './forms/Login'\nimport Dashboard from '../pages/Dashboard'\nimport EditAccount from '../pages/EditAccount'\nimport ManageAccount from '../pages/ManageAccount'\nimport ManageBookings from '../pages/ManageBookings'\nimport EditService from '../pages/EditService'\nimport Calendar from './Calendar'\n\nimport { UserType } from '../types'\n    \nconst mapStateToProps = (state: AppState) => ({\n\ttoken: state.userdata.token,\n\tuser: state.userdata.user,\n\tloggedOut: state.userdata.loggedOut,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n    setUser: (user:UserType|undefined) => void,\n\tlogoutUser: () => void \n}\n\nconst Controller = ({ \n\ttoken, \n\tuser, \n\tloggedOut,\n\tsetToken, \n\tsetUser, \n\tlogoutUser \n}: Props & DispatchProps):React.ReactElement => {\n    \n\tconst query = useQuery(['me', token], () => me(token), { \n\t\tenabled: !!token,\n\t\tonError: () => {\n\t\t\tlocalStorage.removeItem('access_token')\n\t\t\tlogoutUser()\n\t\t},\n\t})\n    \n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('access_token') ?? '')\n\t\tif (query.isSuccess) {\n\t\t\tsetUser({ username: query.data?.data?.username, email: query.data?.data?.email })\n\t\t}\n\t}, [query])\n\n\tconsole.log(query)\n\n\tif (loggedOut) {\n\t\twindow.location.href = '/'\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\n\t\t\t{!!user && <Route exact path=\"/dashboard\" component={Dashboard} />}\n\n\t\t\t{!!user && <Route exact path=\"/add-account\" component={EditAccount} />}\n\t\t\t{!!user && <Route path='/account/:id/edit' component={EditAccount} />}\n\t\t\t\n\t\t\t{!!user && <Route path='/account/:accountId/services/add' component={EditService} />}\n\t\t\t{!!user && <Route path='/account/:accountId/services/:serviceId/edit' component={EditService} />}\n\n\t\t\t{!!user && <Route exact path='/account/:accountId/manage' component={ManageAccount} />}\n\t\t\t{!!user && <Route path='/account/:accountId/bookings' component={ManageBookings} />}\n\t\t\t\n\t\t\t<Route path='/account/:accountId/calendar' component={Calendar} />\n\n\t\t\t{!user && <Route exact path=\"/register\" component={Register} />}\n\t\t\t{!user && <Route exact path=\"/login\" component={Login} />}\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser,\n\tlogoutUser\n})(Controller)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport {\n\tThemeProvider,\n\tcreateMuiTheme\n} from '@material-ui/core'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#6A0572',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#06BCC1',\n\t\t},\n\t},\n})\n\nimport configureStore from './store/store'\n\nimport Controller from './components/Controller'\n\nconst store = configureStore()\n\nconst queryClient = new QueryClient()\n\nfunction App(): React.ReactElement  {\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<Controller />\n\t\t\t\t</ThemeProvider>\n\t\t\t</QueryClientProvider>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n"],"sourceRoot":""}