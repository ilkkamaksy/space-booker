{"version":3,"sources":["store/reducers/user.ts","store/reducers/account.ts","store/store.ts","store/actions/user.ts","utils/config.ts","services/queries.tsx","components/Logo.tsx","components/Header.tsx","pages/Home.tsx","components/forms/Register.tsx","components/forms/Login.tsx","store/actions/accounts.ts","pages/Dashboard.tsx","components/forms/EditAccount.tsx","pages/EditAccount.tsx","components/Calendar.tsx","components/Controller.tsx","App.tsx","index.tsx"],"names":["initialState","user","undefined","token","userReducer","state","action","type","payload","accounts","updating","accountReducer","map","acc","id","rootReducer","combineReducers","userdata","accountdata","setToken","setUser","API_URL","API_PREFIX","register","axios","post","login","saveAccount","account","localStorage","getItem","config","headers","updateAccount","put","getAccounts","get","stylesInUse","makeStyles","createStyles","logo","zIndex","width","marginRight","logoImg","height","display","Logo","classes","Link","component","RouterLink","className","to","src","alt","root","flexGrow","appBar","backgroundColor","linkBtnTransparent","padding","border","textDecoration","opacity","linkBtnBordered","borderRadius","loginGreet","fontSize","color","sectionLeft","textAlign","toggleButton","connect","logoutUser","history","useHistory","AppBar","position","Toolbar","username","onClick","removeItem","push","background","justifyContent","alignItems","intro","heading","fontWeight","letterSpacing","marginBottom","introText","marginTop","containedBtn","margin","outlinedBtn","borderColor","handleClick","path","Button","variant","size","disableElevation","RegisterSchema","Yup","shape","email","required","min","max","password","matches","confirmPassword","oneOf","theme","maxWidth","textField","registerButton","title","successMessage","palette","success","main","errorMessage","error","formStatusProps","message","useState","formStatus","setFormStatus","showFormStatus","setShowFormStatus","setUserdata","redirect","setRedirect","registerMutation","useMutation","onError","onSuccess","createNewAccount","userData","a","mutate","loginMutation","logInUser","useEffect","isSuccess","isLoading","setItem","data","access_token","initialValues","onSubmit","values","actions","setTimeout","setSubmitting","validationSchema","props","handleBlur","handleChange","isSubmitting","touched","errors","Grid","container","direction","item","xs","TextField","name","label","value","onChange","onBlur","helperText","disabled","loginButton","mutation","UserSchema","setAccounts","header","paddingTop","paddingBottom","content","heading_1","heading_2","notice","listTitle","query","useQuery","enabled","length","Container","List","ListItem","ListItemText","primary","Fragment","secondary","addAccount","startAction","setSingleAccount","accountToEdit","AccountSchema","siteUrl","description","saveMutation","updateMutation","saveAccountData","accountData","newAccount","updatedAccount","useParams","find","parseInt","Calendar","date","initialDay","Date","setHours","setMinutes","setSeconds","days","number","isSelected","periods","isReserved","alpha","visible","local","unitTime","selectedByDefault","loading","me","exact","Home","Dashboard","EditAccount","Register","Login","store","createStore","applyMiddleware","thunk","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81fbed25.chunk.js","sourcesContent":["import { \n\tUserActionTypes, \n\tUserState, \n} from '../types'\n\nconst initialState = {\n\tuser: undefined,\n\ttoken: undefined,\n}\n\nconst userReducer = (state = initialState, action: UserActionTypes):UserState => {\n\n\tswitch (action.type) {\n\tcase '@prefix/SET_TOKEN':\n\t\treturn {\n\t\t\t...state,\n\t\t\ttoken: action.payload,\n\t\t}\n\tcase '@prefix/SET_USER':\n\t\treturn {\n\t\t\t...state,\n\t\t\tuser: action.payload,\n\t\t}\n\tcase '@prefix/LOGOUT_USER' :\n\t\treturn {\n\t\t\t...state,\n\t\t\tuser: undefined,\n\t\t\ttoken: undefined,\n\t\t}\n\tdefault: return state\n\t}\n}\n\nexport default userReducer","import { \n\tAccountActionTypes, \n\tAccountState, \n} from '../types'\nimport { Account } from '../../types'\n\nconst initialState = {\n\taccounts: [],\n\tupdating: false\n}\n\nconst accountReducer = (state = initialState, action: AccountActionTypes):AccountState => {\n\tswitch (action.type) {\n\tcase '@prefix/START_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: true\n\t\t}\n\tcase '@prefix/DONE_ACTION':\n\t\treturn {\n\t\t\t...state,\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/ADD_ACCOUNT':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: [action.payload, ...state.accounts],\n\t\t\tupdating: false\n\t\t}\n\tcase '@prefix/SET_ACCOUNTS':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: action.payload,\n\t\t}\n\tcase '@prefix/SET_SINGLE_ACCOUNT':\n\t\treturn {\n\t\t\t...state,\n\t\t\taccounts: state.accounts.map((acc:Account) => acc.id === action.payload.id ? action.payload : acc),\n\t\t\tupdating: false\n\t\t}\n\tdefault: \n\t\treturn state\n\t}\n}\n\nexport default accountReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport userReducer from './reducers/user'\nimport accountReducer from './reducers/account'\n\nconst rootReducer = combineReducers({\n\tuserdata: userReducer,\n\taccountdata: accountReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default function configureStore() {\n\treturn createStore(rootReducer, {}, applyMiddleware(thunk))\n}\n","import { UserType } from '../../types'\nimport { \n\tUserActionTypes,\n} from '../types'\nimport '../reducers/user'\n\nexport function setToken(token:string):UserActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_TOKEN',\n\t\tpayload: token\n\t}\n}\n\nexport const setUser = (user:UserType):UserActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_USER',\n\t\tpayload: user\n\t}\n}\n\nexport const logoutUser = ():UserActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/LOGOUT_USER',\n\t}\n}\n\n","export const API_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : 'https://space-booker.herokuapp.com'\nexport const API_PREFIX = 'api/v1'","import axios from 'axios'\nimport { UseMutationResult, UseQueryResult } from 'react-query'\nimport { \n\tRegisterUserInput, \n\tUserType, \n\tAuthToken, \n\tLoginUserInput,\n\tAccountInput,\n\tAccount\n} from '../types'\nimport { API_URL, API_PREFIX } from '../utils/config'\n\nexport function register(user: RegisterUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post(`${API_URL}/${API_PREFIX}/register`, user)\n}\n\nexport function login(user: LoginUserInput):Promise<UseMutationResult<AuthToken, Error>> {\n\treturn axios.post(`${API_URL}/auth`, user)\n}\n\nexport function saveAccount(account:AccountInput):Promise<UseMutationResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.post(`${API_URL}/${API_PREFIX}/accounts`, account, config)\n}\n\nexport function updateAccount(account:Account):Promise<UseMutationResult<Account, Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\n\treturn axios.put(`${API_URL}/${API_PREFIX}/accounts/${account.id}`, account, config)\n}\n\nexport function getAccounts():Promise<UseQueryResult<Account[], Error>> {\n\t\n\tconst token = localStorage.getItem('access_token')\n\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/accounts`, config)\n}\n\nexport function me(token:string|undefined):Promise<UseQueryResult<UserType, Error>> {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Authorization': `JWT ${token}`\n\t\t}\n\t}\n\treturn axios.get(`${API_URL}/${API_PREFIX}/me`, config)\n}","import React from 'react'\nimport {\n\tcreateStyles,\n\tmakeStyles,\n\tLink,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\tlogo: {\n\t\t\tzIndex: 1250,\n\t\t\twidth: '210px',\n\t\t\tmarginRight: '2em'\n\t\t},\n\t\tlogoImg: {\n\t\t\twidth: '100%',\n\t\t\theight: 'auto',\n\t\t\tdisplay: 'block'\n\t\t}\n\t})\n)\n\nconst Logo = ():React.ReactElement => {\n  \n\tconst classes = stylesInUse()\n  \n\tconst logoImg = '/img/logo.png'\n\n\treturn (\n\t\t<Link component={RouterLink} className={classes.logo} to=\"/\">      \n\t\t\t<img \n\t\t\t\tsrc={process.env.PUBLIC_URL + logoImg} \n\t\t\t\tclassName={classes.logoImg} \n\t\t\t\talt=\"SpaceBooker\"\n\t\t\t/>\n\t\t</Link>\n\t)\n}\n\nexport default Logo\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n\tAppBar,\n\tcreateStyles,\n\tLink,\n\tmakeStyles,\n\tToolbar,\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { logoutUser } from '../store/actions/user'\n\nimport { AppState } from '../store/types'\n\nimport Logo from './Logo'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\t\tappBar: {\n\t\t\tzIndex: 1250,\n\t\t\tbackgroundColor: '#ffffff'\n\t\t},\n\t\tlinkBtnTransparent: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborder: '1px solid transparent',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tlinkBtnBordered: {\n\t\t\tpadding: '0.8em 1em',\n\t\t\tborderRadius: '4px',\n\t\t\tborder: '1px solid rgba(98,0,238, 0.4)',\n\t\t\t'&:hover': {\n\t\t\t\ttextDecoration: 'none',\n\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.02)',\n\t\t\t\topacity: 0.8,\n\t\t\t},\n\t\t},\n\t\tloginGreet: {\n\t\t\tfontSize: '.95em',\n\t\t\tmarginRight: '1em',\n\t\t\tcolor: '#000'\n\t\t},\n\t\tsectionLeft: {\n\t\t\tflexGrow: 1,\n\t\t\ttextAlign: 'left'\n\t\t},\n\t\ttoggleButton: {\n\t\t\tmarginRight: 25,\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    logoutUser: () => void\n}\n\nconst Header = ({ user, logoutUser }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\n\tconst history = useHistory()\n\n\tconst logout = () => {\n\t\tlocalStorage.removeItem('access_token')\n\t\tlogoutUser()\n\t\thistory.push('/')\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<div className={classes.sectionLeft}>\n\t\t\t\t\t\t{user && \n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\tto=\"/dashboard\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{!user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnTransparent}\n\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t>\n                                Login\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/register\"\n\t\t\t\t\t\t\t\t>\n                                Sign up\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\t\t\t\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{user && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className={classes.loginGreet}>\n                                    Hello, {user.username}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\tclassName={classes.linkBtnBordered}\n\t\t\t\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\t\t\t\tonClick={logout}\n\t\t\t\t\t\t\t\t>\n                                    Logout\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tlogoutUser\n})(Header)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Button, makeStyles, createStyles } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\n\nimport { AppState } from '../store/types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#6A0572',\n\t\t\tdisplay: 'flex',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\theight: 'calc(100vh - 64px)',\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading: {\n\t\t\tfontSize: '4rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.5rem',\n\t\t\tmarginTop: '0 auto 2rem',\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#df0cc4',\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 0',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 180,\n\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#fff',\n\t\t\t},\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n\ntype Props = ReturnType<typeof mapStateToProps>;\n\nconst Home = ({ user }: Props):React.ReactElement => {\n\n\tif (user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.intro}>\n\t\t\t\t<h1 className={classes.heading}>Working spaces booking app</h1>\n\t\t\t\t<p className={classes.introText}>\n                    Create a booking calendar for your working spaces in a few seconds.\n\t\t\t\t</p>\n\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/register')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Sign up\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={handleClick('/login')}\n\t\t\t\t\tdisableElevation\n\t\t\t\t>\n                    Login\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { useMutation } from 'react-query'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\nimport { register, login } from '../../services/queries'\n\nimport { AppState } from '../../store/types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport * as Yup from 'yup'\n\nconst RegisterSchema = () => {\n\treturn Yup.object().shape({\n\t\temail: Yup.string().email().required('Email address is mandatory.'),\n\t\tusername: Yup.string()\n\t\t\t.required('Please choose your username.')\n\t\t\t.min(3, 'Username must be at least 3 characters long.')\n\t\t\t.max(50, 'Username can be maximum 50 characters long.')\n\t\t\t.required('Username is mandatory.'),\n\t\tpassword: Yup.string()\n\t\t\t.min(8, 'Password must be at least 8 characters long.')\n\t\t\t.matches(\n\t\t\t\t/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!?@#$%^&*()]).{7,30}\\S$/\n\t\t\t)\n\t\t\t.required(\n\t\t\t\t'Password must have at least one number, one uppercase character, lowercase  character and special character from !?@#$%^&*() '\n\t\t\t),\n\t\tconfirmPassword: Yup.string()\n\t\t\t.oneOf([Yup.ref('password'), ''], 'Passwords must match.')\n\t\t\t.required('Passwords must match.'),\n\t})\n}\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tregisterButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface UserData {\n  username: string\n  email: string\n  password: string\n  confirmPassword: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\tsuccess: {\n\t\tmessage: 'Registered successfully.',\n\t\ttype: 'success',\n\t},\n\terror: {\n\t\tmessage: 'Registeration failed: username or email already registered.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n}\n\nconst Register = ({ user, setToken }: Props & DispatchProps):React.ReactElement => {\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [userdata, setUserdata] = useState({ username: '', password: ''})\n\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst classes = stylesInUse()\n\t\n\tconst registerMutation = useMutation(register, {\n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}, \n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst createNewAccount = async (userData: UserData) => {\n\t\t\n\t\tregisterMutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\temail: userData.email,\n\t\t\tpassword: userData.password\n\t\t})\n\n\t\tsetUserdata({ \n\t\t\tusername: userData.username, \n\t\t\tpassword: userData.password \n\t\t})\n\t}\n\n\tconst loginMutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: { username: string, password: string }) => {\n\t\tloginMutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tif (registerMutation.isSuccess && userdata.username && userdata.password && !loginMutation.isLoading) {\n\t\t\tlogInUser(userdata)\n\t\t}\n\t\n\t\tif (loginMutation.isSuccess) {\n\t\t\tlocalStorage.setItem('access_token', loginMutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(loginMutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [registerMutation, user, loginMutation])\n\n\tif (redirect || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: UserData, actions) => {\n\t\t\t\t\tcreateNewAccount(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={RegisterSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<UserData>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Sign up!</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.email && errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.email\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.email && errors.email ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Make sure your password is minimum of 8 characters long and consists of at least 1 uppercase, lowercase, number and one special ' +\n                          'character from !?@#$%^&*(). Password cannot end with an empty space.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.confirmPassword}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? 'Your confirmation did not match with your password. Please try again.'\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\ttouched.confirmPassword && errors.confirmPassword\n\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.registerButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Sign up\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Register)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../../store/types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport { login } from '../../services/queries'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface LoginFormFields {\n  username: string\n  password: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Invalid username or password. Please try again.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void, \n}\n\nconst Login = ({ user, setToken }: Props & DispatchProps):React.ReactElement => {\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst mutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: LoginFormFields) => {\n\t\tmutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n    \n\tuseEffect(() => {\n\t\tif (mutation.isSuccess && !mutation.isLoading) {\n\t\t\tlocalStorage.setItem('access_token', mutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(mutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [mutation])\n\n\tif (redirect && mutation.isSuccess || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst UserSchema = Yup.object().shape({\n\t\tusername: Yup.string().required('Please enter your username.'),\n\t\tpassword: Yup.string().required('Please enter your password.'),\n\t})\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: LoginFormFields, actions) => {\n\t\t\t\t\tlogInUser(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<LoginFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Log in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Login)","import { Account } from '../../types'\nimport { \n\tAccountActionTypes,\n} from '../types'\nimport '../reducers/account'\n\nexport function startAction():AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/START_ACTION'\n\t}\n}\n\nexport function doneAction():AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/DONE_ACTION'\n\t}\n}\n\nexport function addAccount(account:Account):AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/ADD_ACCOUNT',\n\t\tpayload: account\n\t}\n}\n\nexport const setAccounts = (accounts:Account[]):AccountActionTypes =>  {\n\treturn {\n\t\ttype: '@prefix/SET_ACCOUNTS',\n\t\tpayload: accounts\n\t}\n}\n\nexport function setSingleAccount(account:Account):AccountActionTypes {\n\treturn {\n\t\ttype: '@prefix/SET_SINGLE_ACCOUNT',\n\t\tpayload: account\n\t}\n}\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useQuery } from 'react-query'\nimport {\n\tContainer,\n\tButton,\n\tcreateStyles,\n\tmakeStyles,\n\tList,\n\tListItem,\n\tListItemText,\n\tLink\n} from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { useHistory } from 'react-router-dom'\n\nimport { getAccounts } from '../services/queries'\n\nimport { setAccounts } from '../store/actions/accounts'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nconst stylesInUse = makeStyles(() =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tlistTitle: {\n\t\t\tfontSize: '1.2em',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor:'#000'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t})\n)\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n    setAccounts: (accounts:Account[]) => void\n}\n\nconst Dashboard = ({ accountdata, setAccounts }: Props & DispatchProps):React.ReactElement => {\n\n\tconst classes = stylesInUse()\n\tconst history = useHistory()\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}\n\n\tconst query = useQuery(['getAccounts', accountdata], getAccounts, { \n\t\tenabled: accountdata.accounts.length === 0,\n\t})\n\n\tuseEffect(() => {\n\t\tif (query.isSuccess && accountdata.accounts.length === 0 && query.data.data) {\n\t\t\tsetAccounts(query.data.data)\n\t\t}\n\t}, [query, accountdata])\n\t\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>Dashboard</h1>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tManage your organizations and bookings.\n\t\t\t\t\t</p>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t\t\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>Your organizations</h2>\n\t\t\t\t\n\t\t\t\t\t{accountdata.accounts.length === 0 \n\t\t\t\t\t\t? <p className={classes.notice}>{'You haven\\'t added any organizations yet. Add one to get started!'} </p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t: <List>\n\t\t\t\t\t\t\t{accountdata.accounts.map(item => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ListItem key={item.id}>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.heading_2}\n\t\t\t\t\t\t\t\t\t\t\tprimary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.listTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/spaces`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/spaces`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit spaces\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' | '} \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/edit`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit details\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' | '} \n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/account/${item.id}/calendar`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tView Calendar\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\t\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t) \n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t<Button \n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tonClick={handleClick('/add-account')}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd new organization\n\t\t\t\t\t\t\n\t\t\t\t\t</Button>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts\n})(Dashboard)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { saveAccount, updateAccount } from '../../services/queries'\n\nimport { setAccounts, addAccount, startAction, setSingleAccount } from '../../store/actions/accounts'\n\nimport { AppState } from '../../store/types'\nimport { Account } from '../../types'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t\tcontainedBtn: {\n\t\t\tbackgroundColor: '#6A0572',\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#ffffff',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t},\n\t\toutlinedBtn: {\n\t\t\tpadding: '12px 20px',\n\t\t\tfontWeight: 'bold',\n\t\t\tcolor: '#6A0572',\n\t\t\tmargin: '0 0.5em',\n\t\t\twidth: 'auto',\n\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t'&:hover': {\n\t\t\t\tborderColor: '#6A0572',\n\t\t\t},\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface AccountFormFields {\n  name: string\n  siteUrl: string\n  description: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Something went wrong. Please try again.',\n\t\ttype: 'error',\n\t},\n\tsuccess: {\n\t\tmessage: 'Organisation details saved!',\n\t\ttype: 'success',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype StateProps = ReturnType<typeof mapStateToProps>\n\ninterface DispatchProps { \n\taddAccount: (account:Account) => void, \n\tsetSingleAccount: (account:Account) => void,\n\tstartAction: () => void\n}\n\ninterface Props {\n\taccountToEdit: Account|undefined\n}\n\nconst EditAccount = ({ accountdata, addAccount, accountToEdit, startAction, setSingleAccount }: StateProps & DispatchProps & Props):React.ReactElement => {\n\n\tconst history = useHistory()\n\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\n\tconst AccountSchema = Yup.object().shape({\n\t\tname: Yup.string().required('Please enter the name of your organisation.'),\n\t\tsiteUrl: Yup.string(),\n\t\tdescription: Yup.string(),\n\t})\n    \n\tconst saveMutation = useMutation(saveAccount, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst updateMutation = useMutation(updateAccount, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tsetFormStatus(formStatusProps.success)\n\t\t\tsetShowFormStatus(true)\n\t\t\tstartAction()\n\t\t}\n\t})\n\n\tconst saveAccountData = async (accountData: AccountFormFields) => {\n\t\tif (accountToEdit) {\n\t\t\tupdateMutation.mutate({\n\t\t\t\tid: accountToEdit.id,\n\t\t\t\tname: accountData.name,\n\t\t\t\tsiteUrl: accountData.siteUrl,\n\t\t\t\tdescription: accountData.description\n\t\t\t})\n\t\t} else {\n\t\t\tsaveMutation.mutate({\n\t\t\t\tname: accountData.name,\n\t\t\t\tsiteUrl: accountData.siteUrl,\n\t\t\t\tdescription: accountData.description\n\t\t\t})\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t\n\t\tconst newAccount = saveMutation.data?.data\n\t\n\t\tif (\n\t\t\tsaveMutation.isSuccess &&\n\t\t\t!saveMutation.isLoading && \n\t\t\tnewAccount && \n\t\t\taccountdata.updating\n\t\t) {\n\t\t\taddAccount(newAccount)\n\t\t}\n\n\t\tconst updatedAccount = updateMutation.data?.data\n\t\tif (\n\t\t\tupdateMutation.isSuccess &&\n\t\t\t!updateMutation.isLoading &&\n\t\t\tupdatedAccount &&\n\t\t\taccountdata.updating\n\t\t) {\n\t\t\tsetSingleAccount(updatedAccount)\n\t\t}\t\t\n\n\t}, [saveMutation, updateMutation, accountdata])\n\n\tconst handleClick = (path: string) => {\n\t\treturn () => {\n\t\t\thistory.push(path)\n\t\t}\n\t}    \n\t\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: accountToEdit ? accountToEdit.name : '',\n\t\t\t\tsiteUrl: accountToEdit ? accountToEdit.siteUrl : '',\n\t\t\t\tdescription: accountToEdit ? accountToEdit.description : ''\n\t\t\t}}\n\t\t\tonSubmit={(values: AccountFormFields, actions) => {\n\t\t\t\tsaveAccountData(values)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t}, 400)\n\t\t\t}}\n\t\t\tvalidationSchema={AccountSchema}\n\t\t>\n\t\t\t{(props: FormikProps<AccountFormFields>) => {\n\t\t\t\tconst {\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleChange,\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t} = props\n\n\t\t\t\treturn (\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tlabel=\"Organisation name\"\n\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.name && errors.name\n\t\t\t\t\t\t\t\t\t\t\t? errors.name\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.name && errors.name ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"siteUrl\"\n\t\t\t\t\t\t\t\t\tname=\"siteUrl\"\n\t\t\t\t\t\t\t\t\ttype=\"siteUrl\"\n\t\t\t\t\t\t\t\t\tlabel=\"Website\"\n\t\t\t\t\t\t\t\t\tvalue={values.siteUrl}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.siteUrl && errors.siteUrl\n\t\t\t\t\t\t\t\t\t\t\t? errors.siteUrl\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.siteUrl && errors.siteUrl ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\ttype=\"description\"\n\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t\t\t? errors.description\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\terror={touched.description && errors.description ? true : false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tclassName={classes.containedBtn}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                                        Save\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tclassName={classes.outlinedBtn}\n\t\t\t\t\t\t\t\t\tonClick={handleClick('/dashboard')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{' '}\n                            Cancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t{formStatus.type === 'success' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.successMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : formStatus.type === 'error' ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Form>\n\t\t\t\t)\n\t\t\t}}\t\t\t\n\t\t</Formik>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetAccounts,\n\taddAccount,\n\tstartAction,\n\tsetSingleAccount\n})(EditAccount)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tuseParams\n} from 'react-router-dom'\nimport {\n\tContainer,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nimport AccountForm from '../components/forms/EditAccount'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\ninterface RouteParams {\n\tid: string|undefined\n}\n  \nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\nconst EditAccount = ({ accountdata }: Props):React.ReactElement => {\n\n\tconst { id } = useParams<RouteParams>()\n\n\tconst accountToEdit = id ? accountdata.accounts.find(acc => acc.id === parseInt(id)) : undefined\n\tconst title = id ? 'Edit organization' : 'Add new organization'\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{title}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>General information</h2>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tEdit the name, website url and free description of your organization.\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<AccountForm accountToEdit={accountToEdit} />\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(EditAccount)","import React from 'react'\nimport { AppointmentPicker } from 'react-appointment-picker'\n\nconst Calendar = (): React.ReactElement => {\n\n\tconst setToMonday = (date:Date):Date => {\n\t\tdate.setHours(8)\n\t\tdate.setMinutes(0)\n\t\tdate.setSeconds(0)\n\t\treturn date\n\t}\n    \n\tconst days = [\n\t\t[\n\t\t\t{ id: 1, number: 1, isSelected: true, periods: 1 },\n\t\t\t{ id: 2, number: 2 },\n\t\t\t{ id: 3, number: 3, isReserved: true },\n\t\t\t{ id: 4, number: 4 },\n\t\t\t{ id: 5, number: 5 },\n\t\t\t{ id: 6, number: 6 },\n\t\t\t{ id: 7, number: 7, isReserved: true, periods: 1 },\n\t\t\t{ id: 8, number: 8, isReserved: true },\n\t\t\t{ id: 9, number: 9, isReserved: true },\n\t\t\t{ id: 10, number: 10 },\n\t\t\t{ id: 11, number: 11 },\n\t\t\t{ id: 12, number: 12 }\n\t\t]\n\t]\n    \n \n\treturn (\n\t\t<div>\n\t\t\t<h1>Book</h1>\n\t\t\t<AppointmentPicker\n\t\t\t\tinitialDay={setToMonday(new Date())}\n\t\t\t\tdays={days}\n\t\t\t\talpha\n\t\t\t\tvisible\n\t\t\t\tlocal='fi-FI'\n\t\t\t\tunitTime={1800000}\n\t\t\t\tselectedByDefault\n\t\t\t\tloading={false}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Calendar","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { useQuery } from 'react-query'\n\nimport { AppState } from '../store/types'\nimport { setToken, setUser } from '../store/actions/user'\n\nimport { me } from '../services/queries'\n\nimport Header from './Header'\nimport Home from '../pages/Home'\nimport Register from './forms/Register'\nimport Login from './forms/Login'\nimport Dashboard from '../pages/Dashboard'\nimport EditAccount from '../pages/EditAccount'\nimport Calendar from './Calendar'\n\nimport { UserType } from '../types'\n    \nconst mapStateToProps = (state: AppState) => ({\n\ttoken: state.userdata.token,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n    setUser: (user:UserType) => void, \n}\n\nconst Controller = ({ token, setToken, setUser }: Props & DispatchProps):React.ReactElement => {\n    \n\tconst query = useQuery(['me', token], () => me(token), { \n\t\tenabled: !!token,\n\t\tonError: () => {\n\t\t\tsetToken('')\n\t\t\tlocalStorage.removeItem('access_token')\n\t\t},\n\t})\n    \n\tuseEffect(() => {\n\t\tsetToken(localStorage.getItem('access_token') ?? '')\n\t\tif (query.isSuccess) {\n\t\t\tsetUser({ username: query.data?.data?.username, email: query.data?.data?.email })\n\t\t}\n\t}, [query])\n\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t<Route exact path=\"/add-account\" component={EditAccount} />\n\t\t\t<Route path='/account/:id/edit' component={EditAccount} />\n\t\t\t<Route path='/account/:id/calendar' component={Calendar} />\n\t\t\t<Route path='/account/:id/spaces' component={Calendar} />\n\n\n\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Controller)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport configureStore from './store/store'\n\nimport Controller from './components/Controller'\n\nconst store = configureStore()\n\nconst queryClient = new QueryClient()\n\nfunction App(): React.ReactElement  {\n\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\n\t\t\t\t<Controller />\n\t\t\t\n\t\t\t</QueryClientProvider>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n"],"sourceRoot":""}