[{"/home/ilkka/Studies/tsoha/booker/frontend/src/App.tsx":"1","/home/ilkka/Studies/tsoha/booker/frontend/src/components/Calendar.tsx":"2","/home/ilkka/Studies/tsoha/booker/frontend/src/components/Logo.tsx":"3","/home/ilkka/Studies/tsoha/booker/frontend/src/pages/Home.tsx":"4","/home/ilkka/Studies/tsoha/booker/frontend/src/index.tsx":"5","/home/ilkka/Studies/tsoha/booker/frontend/src/components/Header.tsx":"6","/home/ilkka/Studies/tsoha/booker/frontend/src/components/forms/Register.tsx":"7","/home/ilkka/Studies/tsoha/booker/frontend/src/components/forms/Login.tsx":"8","/home/ilkka/Studies/tsoha/booker/frontend/src/services/queries.tsx":"9","/home/ilkka/Studies/tsoha/booker/frontend/src/components/Wrapper.tsx":"10","/home/ilkka/Studies/tsoha/booker/frontend/src/store/store.ts":"11","/home/ilkka/Studies/tsoha/booker/frontend/src/store/actions/user.ts":"12","/home/ilkka/Studies/tsoha/booker/frontend/src/store/reducers/user.ts":"13","/home/ilkka/Studies/tsoha/booker/frontend/src/store/types.ts":"14","/home/ilkka/Studies/tsoha/booker/frontend/src/pages/Dashboard.tsx":"15","/home/ilkka/Studies/tsoha/booker/frontend/src/store/reducers/account.ts":"16","/home/ilkka/Studies/tsoha/booker/frontend/src/components/forms/EditAccount.tsx":"17","/home/ilkka/Studies/tsoha/booker/frontend/src/store/actions/accounts.ts":"18","/home/ilkka/Studies/tsoha/booker/frontend/src/pages/EditAccount.tsx":"19"},{"size":499,"mtime":1612367178283,"results":"20","hashOfConfig":"21"},{"size":976,"mtime":1611826143123,"results":"22","hashOfConfig":"21"},{"size":700,"mtime":1612337688404,"results":"23","hashOfConfig":"21"},{"size":2372,"mtime":1612426957223,"results":"24","hashOfConfig":"21"},{"size":293,"mtime":1612255678083,"results":"25","hashOfConfig":"21"},{"size":2440,"mtime":1612364575855,"results":"26","hashOfConfig":"21"},{"size":8137,"mtime":1612426988943,"results":"27","hashOfConfig":"21"},{"size":4963,"mtime":1612428152950,"results":"28","hashOfConfig":"21"},{"size":1654,"mtime":1612434882645,"results":"29","hashOfConfig":"21"},{"size":1948,"mtime":1612432500247,"results":"30","hashOfConfig":"21"},{"size":452,"mtime":1612376264398,"results":"31","hashOfConfig":"21"},{"size":449,"mtime":1612364603451,"results":"32","hashOfConfig":"21"},{"size":549,"mtime":1612365967204,"results":"33","hashOfConfig":"21"},{"size":578,"mtime":1612363800980,"results":"34","hashOfConfig":"21"},{"size":4541,"mtime":1612438204241,"results":"35","hashOfConfig":"21"},{"size":891,"mtime":1612438410571,"results":"36","hashOfConfig":"21"},{"size":8200,"mtime":1612438389527,"results":"37","hashOfConfig":"21"},{"size":728,"mtime":1612437407571,"results":"38","hashOfConfig":"21"},{"size":2342,"mtime":1612434375952,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uhrh6r",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/home/ilkka/Studies/tsoha/booker/frontend/src/App.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/Calendar.tsx",[],[],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/Logo.tsx",[],[],"/home/ilkka/Studies/tsoha/booker/frontend/src/pages/Home.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/index.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/Header.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/forms/Register.tsx",["82","83"],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/forms/Login.tsx",["84","85"],"import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { useMutation } from 'react-query'\nimport * as Yup from 'yup'\nimport { Formik, Form, FormikProps } from 'formik'\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../../store/types'\nimport { UserType } from '../../types'\n\nimport { setToken, setUser } from '../../store/actions/user'\n\nimport { login } from '../../services/queries'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmaxWidth: '500px',\n\t\t\tdisplay: 'block',\n\t\t\tmargin: '0 auto',\n\t\t},\n\t\ttextField: {\n\t\t\t'& > *': {\n\t\t\t\twidth: '100%',\n\t\t\t},\n\t\t},\n\t\tloginButton: {\n\t\t\tmarginTop: '30px',\n\t\t},\n\t\ttitle: { textAlign: 'left' },\n\t\tsuccessMessage: { color: theme.palette.success.main },\n\t\terrorMessage: { color: theme.palette.error.main },\n\t})\n)\n\ninterface FormStatus {\n  type: string\n  message: string\n}\n\ninterface FormStatusProps {\n  [key: string]: FormStatus\n}\n\ninterface LoginFormFields {\n  username: string\n  password: string\n}\n\nconst formStatusProps: FormStatusProps = {\n\terror: {\n\t\tmessage: 'Invalid username or password. Please try again.',\n\t\ttype: 'error',\n\t},\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\ttoken: state.userdata.token,\n\tuser: state.userdata.user\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>;\n\ninterface DispatchProps { \n    setToken: (token:string) => void,\n    setUser: (user:UserType) => void, \n}\n\nconst Login = ({ token, user, setToken, setUser }: Props & DispatchProps):React.ReactElement => {\n\tconst [formStatus, setFormStatus] = useState<FormStatus>({\n\t\tmessage: '',\n\t\ttype: '',\n\t})\n\tconst classes = stylesInUse()\n\tconst [showFormStatus, setShowFormStatus] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\n\tconst mutation = useMutation(login, { \n\t\tonError: () => {\n\t\t\tsetFormStatus(formStatusProps.error)\n\t\t\tsetShowFormStatus(true)\n\t\t}\n\t})\n\n\tconst logInUser = async (userData: LoginFormFields) => {\n\t\tmutation.mutate({\n\t\t\tusername: userData.username,\n\t\t\tpassword: userData.password\n\t\t})\n\t}\n    \n\tuseEffect(() => {\n\t\tif (mutation.isSuccess && !mutation.isLoading) {\n\t\t\tlocalStorage.setItem('access_token', mutation.data?.data?.access_token ?? '')\n\t\t\tsetToken(mutation.data?.data?.access_token ?? '')\n\t\t\tsetRedirect(true)\n\t\t}\n\t}, [mutation])\n\n\tif (redirect && mutation.isSuccess || user?.username) {\n\t\treturn <Redirect to=\"/dashboard\" />\n\t}\n\n\tconst UserSchema = Yup.object().shape({\n\t\tusername: Yup.string().required('Please enter your username.'),\n\t\tpassword: Yup.string().required('Please enter your password.'),\n\t})\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values: LoginFormFields, actions) => {\n\t\t\t\t\tlogInUser(values)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tactions.setSubmitting(false)\n\t\t\t\t\t}, 400)\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t>\n\t\t\t\t{(props: FormikProps<LoginFormFields>) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t} = props\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Grid container direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item className={classes.title} xs={12}>\n\t\t\t\t\t\t\t\t\t<h1>Login</h1>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.username && errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.username\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.username && errors.username ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.textField} xs={8}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\ttouched.password && errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t? errors.password\n\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\terror={touched.password && errors.password ? true : false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item className={classes.loginButton} xs={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n                                        Log in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{showFormStatus && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"formStatus\">\n\t\t\t\t\t\t\t\t\t\t\t<p className={classes.errorMessage}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formStatus.message}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps, {\n\tsetToken,\n\tsetUser\n})(Login)","/home/ilkka/Studies/tsoha/booker/frontend/src/services/queries.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/Wrapper.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/store/store.ts",["86"],"/home/ilkka/Studies/tsoha/booker/frontend/src/store/actions/user.ts",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/store/reducers/user.ts",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/store/types.ts",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/pages/Dashboard.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/store/reducers/account.ts",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/components/forms/EditAccount.tsx",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/store/actions/accounts.ts",[],"/home/ilkka/Studies/tsoha/booker/frontend/src/pages/EditAccount.tsx",["87","88","89","90"],"import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n\tuseParams\n} from 'react-router-dom'\nimport {\n\tContainer,\n\tmakeStyles,\n\tcreateStyles,\n} from '@material-ui/core'\n\nimport { AppState } from '../store/types'\nimport { Account } from '../types'\n\nimport AccountForm from '../components/forms/EditAccount'\n\nconst stylesInUse = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackground: '#FFFFFF',\n\t\t\tposition: 'relative',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\n\t\t},\n\t\theader: {\n\t\t\tbackground: '#6A0572',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tpaddingTop: '40px',\n\t\t\tpaddingBottom: '50px',\n\t\t\tcolor:'#ffffff'\n\t\t},\n\t\tcontent: {\n\n\t\t},\n\t\tintro: {\n\t\t\tcolor: '#ffffff',\n\t\t\ttextAlign: 'center',\n\t\t\tposition: 'relative',\n\t\t\tzIndex: 1,\n\t\t},\n\t\theading_1: {\n\t\t\tfontSize: '3rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmargin: '1rem 0 0.5rem 0',\n\t\t},\n\t\theading_2: {\n\t\t\tfontSize: '2rem',\n\t\t\tposition: 'relative',\n\t\t\tfontWeight: 'bold',\n\t\t\tletterSpacing: -1,\n\t\t\tmarginBottom: '1rem',\n\t\t},\n\t\tintroText: {\n\t\t\tfontSize: '1.2rem',\n\t\t\tmargin: '0.5rem auto 1rem',\n\t\t},\n\t\tnotice: {\n\t\t\tfontSize: '1em',\n\t\t\tmargin: '1rem 0 1.5rem',\n\t\t\tcolor:'#111'\n\t\t},\n\t})\n)\n\ninterface RouteParams {\n\tid: string|undefined\n}\n  \nconst mapStateToProps = (state: AppState) => ({\n\taccountdata: state.accountdata,\n})\n  \ntype Props = ReturnType<typeof mapStateToProps>\n\nconst EditAccount = ({ accountdata }: Props):React.ReactElement => {\n\n\tconst { id } = useParams<RouteParams>()\n\n\tconst accountToEdit = id ? accountdata.accounts.find(acc => acc.id === parseInt(id)) : undefined\n\tconst title = id ? 'Edit organization' : 'Add new organization'\n\n\tconst classes = stylesInUse()\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.header}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h1 className={classes.heading_1}>{title}</h1>\n\t\t\t\t</Container>\n\t\t\t</div>\n\n\t\t\t<div className={classes.content}>\n\t\t\t\t<Container maxWidth=\"xl\">\n\t\t\t\t\t<h2 className={classes.heading_2}>General information</h2>\n\t\t\t\t\t<p className={classes.introText}>\n\t\t\t\t\t\tEdit the name, website url and free description of your organization.\n\t\t\t\t\t</p>\n\t\t\t\t\t\n\t\t\t\t\t<AccountForm accountToEdit={accountToEdit} />\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(mapStateToProps)(EditAccount)",{"ruleId":"91","severity":1,"message":"92","line":104,"column":21,"nodeType":"93","messageId":"94","endLine":104,"endColumn":26},{"ruleId":"91","severity":1,"message":"95","line":104,"column":44,"nodeType":"93","messageId":"94","endLine":104,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":76,"column":18,"nodeType":"93","messageId":"94","endLine":76,"endColumn":23},{"ruleId":"91","severity":1,"message":"95","line":76,"column":41,"nodeType":"93","messageId":"94","endLine":76,"endColumn":48},{"ruleId":"96","severity":1,"message":"97","line":14,"column":16,"nodeType":"98","messageId":"99","endLine":14,"endColumn":41},{"ruleId":"91","severity":1,"message":"100","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"101","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"102","line":13,"column":10,"nodeType":"93","messageId":"94","endLine":13,"endColumn":17},{"ruleId":"91","severity":1,"message":"103","line":17,"column":33,"nodeType":"93","messageId":"94","endLine":17,"endColumn":38},"@typescript-eslint/no-unused-vars","'token' is defined but never used.","Identifier","unusedVar","'setUser' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'useState' is defined but never used.","'useEffect' is defined but never used.","'Account' is defined but never used.","'theme' is defined but never used."]